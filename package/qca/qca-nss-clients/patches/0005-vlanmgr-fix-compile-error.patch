--- a/vlan/nss_vlan_mgr.c
+++ b/vlan/nss_vlan_mgr.c
@@ -688,8 +688,10 @@ detach_vsi:
  */
 static void nss_vlan_mgr_instance_free(struct nss_vlan_pvt *v)
 {
+#ifdef NSS_VLAN_MGR_PPE_SUPPORT
 	int32_t i;
 	int ret = 0;
+#endif
 
 #ifdef NSS_VLAN_MGR_PPE_SUPPORT
 	if (v->ppe_vsi) {
@@ -999,8 +1001,11 @@ static int nss_vlan_mgr_register_event(s
 	int ret;
 #endif
 	uint32_t vlan_tag;
+#ifdef NSS_VLAN_MGR_PPE_SUPPORT
 	struct net_device *slave;
-	int32_t port, port_if;
+	int32_t port;
+#endif
+	int32_t port_if;
 	struct vlan_dev_priv *vlan;
 	struct net_device *real_dev;
 	bool is_bond_master = false;
@@ -1393,8 +1398,10 @@ return_with_error:
 int nss_vlan_mgr_join_bridge(struct net_device *dev, uint32_t bridge_vsi)
 {
 	struct nss_vlan_pvt *v = nss_vlan_mgr_instance_find_and_ref(dev);
+#ifdef NSS_VLAN_MGR_PPE_SUPPORT
 	struct net_device *real_dev;
 	int ret;
+#endif
 
 	if (!v)
 		return 0;
@@ -1454,8 +1461,10 @@ EXPORT_SYMBOL(nss_vlan_mgr_join_bridge);
 int nss_vlan_mgr_leave_bridge(struct net_device *dev, uint32_t bridge_vsi)
 {
 	struct nss_vlan_pvt *v = nss_vlan_mgr_instance_find_and_ref(dev);
+#ifdef NSS_VLAN_MGR_PPE_SUPPORT
 	struct net_device *real_dev;
 	int ret;
+#endif
 
 	if (!v)
 		return 0;
--- a/vlan/Makefile
+++ b/vlan/Makefile
@@ -8,7 +8,7 @@ ifeq ($(SoC),$(filter $(SoC),ipq807x ipq
 ccflags-y += -DNSS_VLAN_MGR_PPE_SUPPORT
 endif
 
-ccflags-y += -DNSS_VLAN_MGR_DEBUG_LEVEL=0
+ccflags-y += -DNSS_VLAN_MGR_DEBUG_LEVEL=4
 ccflags-y += -Wall -Werror
 
 ifneq (,$(filter $(CONFIG_BONDING),y m))
