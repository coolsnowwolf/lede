--- a/gettext-runtime/gnulib-m4/stddef_h.m4
+++ b/gettext-runtime/gnulib-m4/stddef_h.m4
@@ -8,7 +8,7 @@ dnl with or without modifications, as lo
 AC_DEFUN([gl_STDDEF_H],
 [
   AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
   STDDEF_H=
 
   dnl Test whether the type max_align_t exists and whether its alignment
--- a/gettext-runtime/gnulib-m4/stdint.m4
+++ b/gettext-runtime/gnulib-m4/stdint.m4
@@ -15,7 +15,7 @@ AC_DEFUN_ONCE([gl_STDINT_H],
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
 
   AC_REQUIRE([gl_LIMITS_H])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 
   dnl For backward compatibility. Some packages may still be testing these
   dnl macros.
--- a/gettext-runtime/gnulib-m4/wchar_h.m4
+++ b/gettext-runtime/gnulib-m4/wchar_h.m4
@@ -27,7 +27,7 @@ AC_DEFUN([gl_WCHAR_H],
 
   AC_REQUIRE([gl_FEATURES_H])
 
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   if test $gt_cv_c_wint_t = yes; then
     HAVE_WINT_T=1
   else
--- a/gettext-runtime/gnulib-m4/wchar_t.m4
+++ b/gettext-runtime/gnulib-m4/wchar_t.m4
@@ -8,7 +8,7 @@ dnl From Bruno Haible.
 dnl Test whether <stddef.h> has the 'wchar_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WCHAR_T],
+AC_DEFUN([gt_TYPE_WCHAR_T_GT],
 [
   AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
     [AC_COMPILE_IFELSE(
--- a/gettext-runtime/gnulib-m4/wctype_h.m4
+++ b/gettext-runtime/gnulib-m4/wctype_h.m4
@@ -22,7 +22,7 @@ AC_DEFUN([gl_WCTYPE_H],
   fi
   AC_SUBST([HAVE_ISWCNTRL])
 
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   if test $gt_cv_c_wint_t = yes; then
     HAVE_WINT_T=1
   else
--- a/gettext-runtime/gnulib-m4/wcwidth.m4
+++ b/gettext-runtime/gnulib-m4/wcwidth.m4
@@ -12,8 +12,8 @@ AC_DEFUN([gl_FUNC_WCWIDTH],
   dnl Persuade glibc <wchar.h> to declare wcwidth().
   AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
 
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 
   AC_CHECK_HEADERS_ONCE([wchar.h])
   AC_CHECK_FUNCS_ONCE([wcwidth])
--- a/gettext-runtime/gnulib-m4/wint_t.m4
+++ b/gettext-runtime/gnulib-m4/wint_t.m4
@@ -9,7 +9,7 @@ dnl Test whether <wchar.h> has the 'wint
 dnl <wchar.h> or <wctype.h> would, if present, override 'wint_t'.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WINT_T],
+AC_DEFUN([gt_TYPE_WINT_T_GT],
 [
   AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
     [AC_COMPILE_IFELSE(
--- a/gettext-runtime/intl/Makefile.am
+++ b/gettext-runtime/intl/Makefile.am
@@ -274,7 +274,7 @@ libgnuintl.h: $(srcdir)/libgnuintl.in.h
 	    -e 's,@''HAVE_ASPRINTF''@,@HAVE_ASPRINTF@,g' \
 	    -e 's,@''HAVE_SNPRINTF''@,@HAVE_SNPRINTF@,g' \
 	    -e 's,@''HAVE_WPRINTF''@,@HAVE_WPRINTF@,g' \
-	    -e 's,@''HAVE_NAMELESS_LOCALES''@,@HAVE_NAMELESS_LOCALES@,g' \
+	    -e 's,@''HAVE_NAMELESS_LOCALES''@,0,g' \
 	    -e 's,@''HAVE_NEWLOCALE''@,@HAVE_NEWLOCALE@,g' \
 	  < $(srcdir)/libgnuintl.in.h \
 	| if test '@WOE32DLL@' = yes; then \
@@ -294,7 +294,7 @@ libintl.h: $(srcdir)/libgnuintl.in.h
 	    -e 's,@''HAVE_ASPRINTF''@,@HAVE_ASPRINTF@,g' \
 	    -e 's,@''HAVE_SNPRINTF''@,@HAVE_SNPRINTF@,g' \
 	    -e 's,@''HAVE_WPRINTF''@,@HAVE_WPRINTF@,g' \
-	    -e 's,@''HAVE_NAMELESS_LOCALES''@,@HAVE_NAMELESS_LOCALES@,g' \
+	    -e 's,@''HAVE_NAMELESS_LOCALES''@,0,g' \
 	    -e 's,@''HAVE_NEWLOCALE''@,@HAVE_NEWLOCALE@,g' \
 	  < $(srcdir)/libgnuintl.in.h > libintl.h
 MOSTLYCLEANFILES += libintl.h
--- a/gettext-runtime/libasprintf/configure.ac
+++ b/gettext-runtime/libasprintf/configure.ac
@@ -76,8 +76,8 @@ dnl Checks for typedefs, structures, and
 AC_C_INLINE
 AC_TYPE_SIZE_T
 AC_TYPE_LONG_LONG_INT
-gt_TYPE_WCHAR_T
-gt_TYPE_WINT_T
+gt_TYPE_WCHAR_T_GT
+gt_TYPE_WINT_T_GT
 AC_TYPE_MBSTATE_T
 AC_CHECK_TYPE([ptrdiff_t], ,
   [AC_DEFINE([ptrdiff_t], [long],
--- a/gettext-runtime/libasprintf/gnulib-m4/wchar_t.m4
+++ b/gettext-runtime/libasprintf/gnulib-m4/wchar_t.m4
@@ -8,7 +8,7 @@ dnl From Bruno Haible.
 dnl Test whether <stddef.h> has the 'wchar_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WCHAR_T],
+AC_DEFUN([gt_TYPE_WCHAR_T_GT],
 [
   AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
     [AC_COMPILE_IFELSE(
--- a/gettext-runtime/libasprintf/gnulib-m4/wint_t.m4
+++ b/gettext-runtime/libasprintf/gnulib-m4/wint_t.m4
@@ -9,7 +9,7 @@ dnl Test whether <wchar.h> has the 'wint
 dnl <wchar.h> or <wctype.h> would, if present, override 'wint_t'.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WINT_T],
+AC_DEFUN([gt_TYPE_WINT_T_GT],
 [
   AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
     [AC_COMPILE_IFELSE(
--- a/gettext-runtime/m4/intl.m4
+++ b/gettext-runtime/m4/intl.m4
@@ -31,8 +31,8 @@ AC_DEFUN([AM_INTL_SUBDIR],
   AC_REQUIRE([gl_VISIBILITY])dnl
   AC_REQUIRE([gt_INTL_SUBDIR_CORE])dnl
   AC_REQUIRE([AC_TYPE_LONG_LONG_INT])dnl
-  AC_REQUIRE([gt_TYPE_WCHAR_T])dnl
-  AC_REQUIRE([gt_TYPE_WINT_T])dnl
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])dnl
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])dnl
   AC_REQUIRE([gl_AC_HEADER_INTTYPES_H])
   AC_REQUIRE([gt_TYPE_INTMAX_T])
   AC_REQUIRE([gt_PRINTF_POSIX])
--- a/gettext-tools/gnulib-m4/gnulib-comp.m4
+++ b/gettext-tools/gnulib-m4/gnulib-comp.m4
@@ -1843,8 +1843,8 @@ changequote([, ])dnl
   AC_REQUIRE([gl_SOCKETS])
   gl_TYPE_SOCKLEN_T
   gl_STDALIGN_H
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   gl_FUNC_STRERROR_R
   if test $HAVE_DECL_STRERROR_R = 0 || test $REPLACE_STRERROR_R = 1; then
     AC_LIBOBJ([strerror_r])
--- a/gettext-tools/gnulib-m4/stddef_h.m4
+++ b/gettext-tools/gnulib-m4/stddef_h.m4
@@ -8,7 +8,7 @@ dnl with or without modifications, as lo
 AC_DEFUN([gl_STDDEF_H],
 [
   AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
   STDDEF_H=
 
   dnl Test whether the type max_align_t exists and whether its alignment
--- a/gettext-tools/gnulib-m4/stdint.m4
+++ b/gettext-tools/gnulib-m4/stdint.m4
@@ -15,7 +15,7 @@ AC_DEFUN_ONCE([gl_STDINT_H],
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
 
   AC_REQUIRE([gl_LIMITS_H])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 
   dnl For backward compatibility. Some packages may still be testing these
   dnl macros.
--- a/gettext-tools/gnulib-m4/vasnprintf.m4
+++ b/gettext-tools/gnulib-m4/vasnprintf.m4
@@ -32,16 +32,16 @@ AC_DEFUN([gl_REPLACE_VASNPRINTF],
 # Prerequisites of lib/printf-args.h, lib/printf-args.c.
 AC_DEFUN([gl_PREREQ_PRINTF_ARGS],
 [
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 ])
 
 # Prerequisites of lib/printf-parse.h, lib/printf-parse.c.
 AC_DEFUN([gl_PREREQ_PRINTF_PARSE],
 [
   AC_REQUIRE([gl_FEATURES_H])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   AC_REQUIRE([AC_TYPE_SIZE_T])
   AC_CHECK_TYPE([ptrdiff_t], ,
     [AC_DEFINE([ptrdiff_t], [long],
@@ -54,8 +54,8 @@ AC_DEFUN([gl_PREREQ_PRINTF_PARSE],
 AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF],
 [
   AC_REQUIRE([AC_FUNC_ALLOCA])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   AC_CHECK_FUNCS([snprintf strnlen wcslen wcsnlen mbrtowc wcrtomb])
   dnl Use the _snprintf function only if it is declared (because on NetBSD it
   dnl is defined as a weak alias of snprintf; we prefer to use the latter).
--- a/gettext-tools/gnulib-m4/wchar_h.m4
+++ b/gettext-tools/gnulib-m4/wchar_h.m4
@@ -27,7 +27,7 @@ AC_DEFUN([gl_WCHAR_H],
 
   AC_REQUIRE([gl_FEATURES_H])
 
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   if test $gt_cv_c_wint_t = yes; then
     HAVE_WINT_T=1
   else
--- a/gettext-tools/gnulib-m4/wchar_t.m4
+++ b/gettext-tools/gnulib-m4/wchar_t.m4
@@ -8,7 +8,7 @@ dnl From Bruno Haible.
 dnl Test whether <stddef.h> has the 'wchar_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WCHAR_T],
+AC_DEFUN([gt_TYPE_WCHAR_T_GT],
 [
   AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
     [AC_COMPILE_IFELSE(
--- a/gettext-tools/gnulib-m4/wctype_h.m4
+++ b/gettext-tools/gnulib-m4/wctype_h.m4
@@ -22,7 +22,7 @@ AC_DEFUN([gl_WCTYPE_H],
   fi
   AC_SUBST([HAVE_ISWCNTRL])
 
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   if test $gt_cv_c_wint_t = yes; then
     HAVE_WINT_T=1
   else
--- a/gettext-tools/gnulib-m4/wcwidth.m4
+++ b/gettext-tools/gnulib-m4/wcwidth.m4
@@ -12,8 +12,8 @@ AC_DEFUN([gl_FUNC_WCWIDTH],
   dnl Persuade glibc <wchar.h> to declare wcwidth().
   AC_REQUIRE([AC_USE_SYSTEM_EXTENSIONS])
 
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 
   AC_CHECK_HEADERS_ONCE([wchar.h])
   AC_CHECK_FUNCS_ONCE([wcwidth])
--- a/gettext-tools/gnulib-m4/wint_t.m4
+++ b/gettext-tools/gnulib-m4/wint_t.m4
@@ -9,7 +9,7 @@ dnl Test whether <wchar.h> has the 'wint
 dnl <wchar.h> or <wctype.h> would, if present, override 'wint_t'.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WINT_T],
+AC_DEFUN([gt_TYPE_WINT_T_GT],
 [
   AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
     [AC_COMPILE_IFELSE(
--- a/gettext-tools/intl/Makefile.am
+++ b/gettext-tools/intl/Makefile.am
@@ -274,7 +274,7 @@ libgnuintl.h: $(srcdir)/libgnuintl.in.h
 	    -e 's,@''HAVE_ASPRINTF''@,@HAVE_ASPRINTF@,g' \
 	    -e 's,@''HAVE_SNPRINTF''@,@HAVE_SNPRINTF@,g' \
 	    -e 's,@''HAVE_WPRINTF''@,@HAVE_WPRINTF@,g' \
-	    -e 's,@''HAVE_NAMELESS_LOCALES''@,@HAVE_NAMELESS_LOCALES@,g' \
+	    -e 's,@''HAVE_NAMELESS_LOCALES''@,0,g' \
 	    -e 's,@''HAVE_NEWLOCALE''@,@HAVE_NEWLOCALE@,g' \
 	  < $(srcdir)/libgnuintl.in.h \
 	| if test '@WOE32DLL@' = yes; then \
@@ -294,7 +294,7 @@ libintl.h: $(srcdir)/libgnuintl.in.h
 	    -e 's,@''HAVE_ASPRINTF''@,@HAVE_ASPRINTF@,g' \
 	    -e 's,@''HAVE_SNPRINTF''@,@HAVE_SNPRINTF@,g' \
 	    -e 's,@''HAVE_WPRINTF''@,@HAVE_WPRINTF@,g' \
-	    -e 's,@''HAVE_NAMELESS_LOCALES''@,@HAVE_NAMELESS_LOCALES@,g' \
+	    -e 's,@''HAVE_NAMELESS_LOCALES''@,0,g' \
 	    -e 's,@''HAVE_NEWLOCALE''@,@HAVE_NEWLOCALE@,g' \
 	  < $(srcdir)/libgnuintl.in.h > libintl.h
 MOSTLYCLEANFILES += libintl.h
--- a/libtextstyle/gnulib-m4/stddef_h.m4
+++ b/libtextstyle/gnulib-m4/stddef_h.m4
@@ -8,7 +8,7 @@ dnl with or without modifications, as lo
 AC_DEFUN([gl_STDDEF_H],
 [
   AC_REQUIRE([gl_STDDEF_H_DEFAULTS])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
   STDDEF_H=
 
   dnl Test whether the type max_align_t exists and whether its alignment
--- a/libtextstyle/gnulib-m4/stdint.m4
+++ b/libtextstyle/gnulib-m4/stdint.m4
@@ -15,7 +15,7 @@ AC_DEFUN_ONCE([gl_STDINT_H],
   AC_REQUIRE([AC_CANONICAL_HOST]) dnl for cross-compiles
 
   AC_REQUIRE([gl_LIMITS_H])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 
   dnl For backward compatibility. Some packages may still be testing these
   dnl macros.
--- a/libtextstyle/gnulib-m4/vasnprintf.m4
+++ b/libtextstyle/gnulib-m4/vasnprintf.m4
@@ -32,16 +32,16 @@ AC_DEFUN([gl_REPLACE_VASNPRINTF],
 # Prerequisites of lib/printf-args.h, lib/printf-args.c.
 AC_DEFUN([gl_PREREQ_PRINTF_ARGS],
 [
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
 ])
 
 # Prerequisites of lib/printf-parse.h, lib/printf-parse.c.
 AC_DEFUN([gl_PREREQ_PRINTF_PARSE],
 [
   AC_REQUIRE([gl_FEATURES_H])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   AC_REQUIRE([AC_TYPE_SIZE_T])
   AC_CHECK_TYPE([ptrdiff_t], ,
     [AC_DEFINE([ptrdiff_t], [long],
@@ -54,8 +54,8 @@ AC_DEFUN([gl_PREREQ_PRINTF_PARSE],
 AC_DEFUN_ONCE([gl_PREREQ_VASNPRINTF],
 [
   AC_REQUIRE([AC_FUNC_ALLOCA])
-  AC_REQUIRE([gt_TYPE_WCHAR_T])
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WCHAR_T_GT])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   AC_CHECK_FUNCS([snprintf strnlen wcslen wcsnlen mbrtowc wcrtomb])
   dnl Use the _snprintf function only if it is declared (because on NetBSD it
   dnl is defined as a weak alias of snprintf; we prefer to use the latter).
--- a/libtextstyle/gnulib-m4/wchar_h.m4
+++ b/libtextstyle/gnulib-m4/wchar_h.m4
@@ -27,7 +27,7 @@ AC_DEFUN([gl_WCHAR_H],
 
   AC_REQUIRE([gl_FEATURES_H])
 
-  AC_REQUIRE([gt_TYPE_WINT_T])
+  AC_REQUIRE([gt_TYPE_WINT_T_GT])
   if test $gt_cv_c_wint_t = yes; then
     HAVE_WINT_T=1
   else
--- a/libtextstyle/gnulib-m4/wchar_t.m4
+++ b/libtextstyle/gnulib-m4/wchar_t.m4
@@ -8,7 +8,7 @@ dnl From Bruno Haible.
 dnl Test whether <stddef.h> has the 'wchar_t' type.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WCHAR_T],
+AC_DEFUN([gt_TYPE_WCHAR_T_GT],
 [
   AC_CACHE_CHECK([for wchar_t], [gt_cv_c_wchar_t],
     [AC_COMPILE_IFELSE(
--- a/libtextstyle/gnulib-m4/wint_t.m4
+++ b/libtextstyle/gnulib-m4/wint_t.m4
@@ -9,7 +9,7 @@ dnl Test whether <wchar.h> has the 'wint
 dnl <wchar.h> or <wctype.h> would, if present, override 'wint_t'.
 dnl Prerequisite: AC_PROG_CC
 
-AC_DEFUN([gt_TYPE_WINT_T],
+AC_DEFUN([gt_TYPE_WINT_T_GT],
 [
   AC_CACHE_CHECK([for wint_t], [gt_cv_c_wint_t],
     [AC_COMPILE_IFELSE(
