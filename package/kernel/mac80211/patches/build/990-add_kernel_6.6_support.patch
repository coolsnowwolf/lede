--- a/net/wireless/sysfs.c
+++ b/net/wireless/sysfs.c
@@ -154,12 +154,21 @@ static SIMPLE_DEV_PM_OPS(wiphy_pm_ops, w
 #define WIPHY_PM_OPS NULL
 #endif
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+static const void *wiphy_namespace(const struct device *d)
+{
+	struct wiphy *wiphy = container_of(d, struct wiphy, dev);
+
+	return wiphy_net(wiphy);
+}
+#else
 static const void *wiphy_namespace(struct device *d)
 {
 	struct wiphy *wiphy = container_of(d, struct wiphy, dev);
 
 	return wiphy_net(wiphy);
 }
+#endif
 
 struct class ieee80211_class = {
 	.name = "ieee80211",
--- a/net/wireless/nl80211.c
+++ b/net/wireless/nl80211.c
@@ -16218,8 +16218,14 @@ static u32 nl80211_internal_flags[] = {
 #undef SELECTOR
 };
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+static int nl80211_pre_doit(const struct genl_split_ops *ops,
+			    struct sk_buff *skb,
+			    struct genl_info *info)
+#else
 static int nl80211_pre_doit(const struct genl_ops *ops, struct sk_buff *skb,
 			    struct genl_info *info)
+#endif
 {
 	struct cfg80211_registered_device *rdev = NULL;
 	struct wireless_dev *wdev = NULL;
@@ -16319,8 +16325,14 @@ out_unlock:
 	return err;
 }
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+static void nl80211_post_doit(const struct genl_split_ops *ops,
+			      struct sk_buff *skb,
+			      struct genl_info *info)
+#else
 static void nl80211_post_doit(const struct genl_ops *ops, struct sk_buff *skb,
 			      struct genl_info *info)
+#endif
 {
 	u32 internal_flags = nl80211_internal_flags[ops->internal_flags];
 
--- a/net/mac80211/tx.c
+++ b/net/mac80211/tx.c
@@ -27,6 +27,10 @@
 #include <asm/unaligned.h>
 #include <net/fq_impl.h>
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+#include <net/gso.h>
+#endif
+
 #include "ieee80211_i.h"
 #include "driver-ops.h"
 #include "led.h"
--- a/drivers/net/wireless/intel/iwlwifi/mvm/tx.c
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/tx.c
@@ -10,6 +10,10 @@
 #include <net/ip.h>
 #include <net/ipv6.h>
 
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0)
+#include <net/gso.h>
+#endif
+
 #include "iwl-trans.h"
 #include "iwl-eeprom-parse.h"
 #include "mvm.h"
--- a/drivers/net/wireless/mac80211_hwsim.c
+++ b/drivers/net/wireless/mac80211_hwsim.c
@@ -5759,7 +5759,11 @@ static int __init init_mac80211_hwsim(vo
 	if (err)
 		goto out_exit_netlink;
 
+#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 4, 0))
+	hwsim_class = class_create("mac80211_hwsim");
+#else
 	hwsim_class = class_create(THIS_MODULE, "mac80211_hwsim");
+#endif
 	if (IS_ERR(hwsim_class)) {
 		err = PTR_ERR(hwsim_class);
 		goto out_exit_virtio;
