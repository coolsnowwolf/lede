--- a/include/linux/ath9k_platform.h
+++ b/include/linux/ath9k_platform.h
@@ -46,6 +46,9 @@ struct ath9k_platform_data {
 	int (*external_reset)(void);
 
 	bool use_eeprom;
+
+	int num_leds;
+	const struct gpio_led *leds;
 };
 
 #endif /* _LINUX_ATH9K_PLATFORM_H */
--- a/drivers/net/wireless/ath/ath9k/gpio.c
+++ b/drivers/net/wireless/ath/ath9k/gpio.c
@@ -15,6 +15,7 @@
  */
 
 #include "ath9k.h"
+#include <linux/ath9k_platform.h>
 
 /********************************/
 /*	 LED functions		*/
@@ -108,6 +109,24 @@ int ath_create_gpio_led(struct ath_softc
 	return ret;
 }
 
+static int ath_create_platform_led(struct ath_softc *sc,
+				   const struct gpio_led *gpio)
+{
+	struct ath_led *led;
+	int ret;
+
+	led = kzalloc(sizeof(*led), GFP_KERNEL);
+	if (!led)
+		return -ENOMEM;
+
+	led->gpio = gpio;
+	ret = ath_add_led(sc, led);
+	if (ret < 0)
+		kfree(led);
+
+	return ret;
+}
+
 void ath_deinit_leds(struct ath_softc *sc)
 {
 	struct ath_led *led;
@@ -124,8 +143,10 @@ void ath_deinit_leds(struct ath_softc *s
 
 void ath_init_leds(struct ath_softc *sc)
 {
+	struct ath9k_platform_data *pdata = sc->dev->platform_data;
 	char led_name[32];
 	const char *trigger;
+	int i;
 
 	INIT_LIST_HEAD(&sc->leds);
 
@@ -134,6 +155,17 @@ void ath_init_leds(struct ath_softc *sc)
 
 	ath_fill_led_pin(sc);
 
+	if (pdata && pdata->leds && pdata->num_leds)
+		for (i = 0; i < pdata->num_leds; i++) {
+			if (pdata->leds[i].gpio == sc->sc_ah->led_pin)
+				sc->sc_ah->led_pin = -1;
+
+			ath_create_platform_led(sc, &pdata->leds[i]);
+		}
+
+	if (sc->sc_ah->led_pin < 0)
+		return;
+
 	snprintf(led_name, sizeof(led_name), "ath9k-%s",
 		 wiphy_name(sc->hw->wiphy));
 
