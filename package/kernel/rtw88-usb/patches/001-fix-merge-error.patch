--- a/fw.c
+++ b/fw.c
@@ -1009,7 +1009,7 @@ static u8 rtw_get_rsvd_page_probe_req_location(struct rtw_dev *rtwdev,
 		if (rsvd_pkt->type != RSVD_PROBE_REQ)
 			continue;
 		if ((!ssid && !rsvd_pkt->ssid) ||
-			cfg80211_ssid_eq(rsvd_pkt->ssid, ssid))
+		    cfg80211_ssid_eq(rsvd_pkt->ssid, ssid))
 			location = rsvd_pkt->page;
 	}
 
--- a/mac.c
+++ b/mac.c
@@ -316,13 +316,6 @@ static int rtw_mac_power_switch(struct rtw_dev *rtwdev, bool pwr_on)
 			rtw_write8_clr(rtwdev, REG_SYS_STATUS1 + 1, BIT(0));
 	}
 
-	if (pwr_on && rtw_hci_type(rtwdev) == RTW_HCI_TYPE_USB) {
-		if (chip->id == RTW_CHIP_TYPE_8822C ||
-		    chip->id == RTW_CHIP_TYPE_8822B ||
-		    chip->id == RTW_CHIP_TYPE_8821C)
-			rtw_write8_clr(rtwdev, REG_SYS_STATUS1 + 1, BIT(0));
-	}
-
 	if (rtw_hci_type(rtwdev) == RTW_HCI_TYPE_SDIO)
 		rtw_write32(rtwdev, REG_SDIO_HIMR, imr);
 
@@ -956,18 +949,6 @@ static int __rtw_download_firmware_legacy(struct rtw_dev *rtwdev,
 		rtw_write8(rtwdev, REG_MCUFW_CTRL, 0x00);
 	}
 
-	/* reset firmware if still present */
-	if (rtwdev->chip->id == RTW_CHIP_TYPE_8703B &&
-	    rtw_read8_mask(rtwdev, REG_MCUFW_CTRL, BIT_RAM_DL_SEL)) {
-		rtw_write8(rtwdev, REG_MCUFW_CTRL, 0x00);
-	}
-
-	/* reset firmware if still present */
-	if (rtwdev->chip->id == RTW_CHIP_TYPE_8703B &&
-	    rtw_read8_mask(rtwdev, REG_MCUFW_CTRL, BIT_RAM_DL_SEL)) {
-		rtw_write8(rtwdev, REG_MCUFW_CTRL, 0x00);
-	}
-
 	en_download_firmware_legacy(rtwdev, true);
 	ret = download_firmware_legacy(rtwdev, fw->firmware->data, fw->firmware->size);
 	en_download_firmware_legacy(rtwdev, false);
--- a/main.c
+++ b/main.c
@@ -110,9 +110,7 @@ static const struct ieee80211_iface_limit rtw_iface_limits[] = {
 	},
 	{
 		.max = 1,
-		.types = BIT(NL80211_IFTYPE_AP) |
-                        BIT(NL80211_IFTYPE_P2P_CLIENT) |
-                        BIT(NL80211_IFTYPE_P2P_GO)
+		.types = BIT(NL80211_IFTYPE_AP),
 	}
 };
 
@@ -2124,11 +2122,6 @@ static int rtw_chip_efuse_info_setup(struct rtw_dev *rtwdev)
 		dev_warn(rtwdev->dev, "efuse MAC invalid, using random\n");
 	}
 
-	if (!is_valid_ether_addr(efuse->addr)) {
-		eth_random_addr(efuse->addr);
-		dev_warn(rtwdev->dev, "efuse MAC invalid, using random\n");
-	}
-
 out_disable:
 	rtw_chip_efuse_disable(rtwdev);
 
@@ -2361,9 +2354,7 @@ int rtw_register_hw(struct rtw_dev *rtwdev, struct ieee80211_hw *hw)
 	hw->wiphy->interface_modes = BIT(NL80211_IFTYPE_STATION) |
 				     BIT(NL80211_IFTYPE_AP) |
 				     BIT(NL80211_IFTYPE_ADHOC) |
-				     BIT(NL80211_IFTYPE_MESH_POINT) |
-                                    BIT(NL80211_IFTYPE_P2P_CLIENT) |
-                                    BIT(NL80211_IFTYPE_P2P_GO);
+				     BIT(NL80211_IFTYPE_MESH_POINT);
 	hw->wiphy->available_antennas_tx = hal->antenna_tx;
 	hw->wiphy->available_antennas_rx = hal->antenna_rx;
 
--- a/usb.c
+++ b/usb.c
@@ -93,11 +93,6 @@ static u32 rtw_usb_read(struct rtw_dev *rtwdev, u32 addr, u16 len)
 	    rtwdev->chip->id == RTW_CHIP_TYPE_8821C)
 		rtw_usb_reg_sec(rtwdev, addr, data);
 
-	if (rtwdev->chip->id == RTW_CHIP_TYPE_8822C ||
-	    rtwdev->chip->id == RTW_CHIP_TYPE_8822B ||
-	    rtwdev->chip->id == RTW_CHIP_TYPE_8821C)
-		rtw_usb_reg_sec(rtwdev, addr, data);
-
 	return le32_to_cpu(*data);
 }
 
