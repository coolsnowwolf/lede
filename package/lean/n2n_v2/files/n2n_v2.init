#!/bin/sh /etc/rc.common
# Copyright (C) 2008-2020 OpenWrt.org

START=99

start_instance() {
    local cfg="$1"

    config_get type "$cfg" TYPE

    case "$type" in
      edge)
        config_get_bool enabled "$cfg" 'enabled' '0'
        [ "$enabled" = "0" ] && return 1
        config_get tunname "$cfg" 'tunname'
        config_get mode "$cfg" 'mode'
        config_get ipaddr "$cfg" 'ipaddr'
        config_get prefix "$cfg" 'prefix'
        config_get mtu "$cfg" 'mtu'
        config_get supernode "$cfg" 'supernode'
        config_get port "$cfg" 'port'
        config_get community "$cfg" 'community'
        config_get key "$cfg" 'key'
        config_get_bool route "$cfg" 'route' '0'
        address="$ipaddr"
        [ "$route" = "1" ] && args='-r'
        [ "$mode" = 'dhcp' ] && address='0.0.0.0'
        [ "-$mtu" != "-" ] && mtu="-M $mtu"
        eval "$(ipcalc.sh "$ipaddr/$prefix")"
        netmask="$NETMASK"
        /usr/bin/edge -u 0 -g 0 -d $tunname -a ${mode}:${address} -s $netmask -c $community $([ -n "$key" ] && echo -k $key) -l ${supernode}:${port} $args $mtu
        sleep 1
        iptables -I FORWARD -i "$tunname" -j ACCEPT
        iptables -I FORWARD -o "$tunname" -j ACCEPT
        iptables -t nat -I POSTROUTING -o "$tunname" -j MASQUERADE
      ;;
      supernode)
        config_get_bool enabled "$cfg" 'enabled' '0'
        [ "$enabled" = "0" ] && return 1
        config_get port "$cfg" port
        /usr/bin/supernode -l $port &
      ;;
      route)
        config_get_bool enabled "$cfg" 'enabled' '0'
        [ "$enabled" = "0" ] && return 1
        config_get ip "$cfg" 'ip'
        config_get mask "$cfg" 'mask'
        config_get gw "$cfg" 'gw'
        route add -net $ip/$mask gw $gw
      ;;
    esac
}

stop_instance() {
    local cfg="$1"

    config_get type "$cfg" TYPE

    case "$type" in
      edge)
        config_get tunname "$cfg" 'tunname'
        iptables -D FORWARD -i "$tunname" -j ACCEPT 2>/dev/null
        iptables -D FORWARD -o "$tunname" -j ACCEPT 2>/dev/null
        iptables -t nat -D POSTROUTING -o "$tunname" -j MASQUERADE 2>/dev/null
        killall -9 edge
      ;;
      supernode)
        killall -9 supernode
      ;;
    esac
}

start() {
    config_load 'n2n_v2'
    config_foreach start_instance 'edge'
    config_foreach start_instance 'supernode'
    sleep 2
    config_foreach start_instance 'route'
}

stop() {
    config_load 'n2n_v2'
    config_foreach stop_instance 'edge'
    ps | grep supernode | grep -v grep 2>&1 >/dev/null && killall -9 supernode
}
