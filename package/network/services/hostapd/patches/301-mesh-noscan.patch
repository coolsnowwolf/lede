--- a/wpa_supplicant/config.c
+++ b/wpa_supplicant/config.c
@@ -2555,6 +2555,7 @@ static const struct parse_data ssid_fiel
 #else /* CONFIG_MESH */
 	{ INT_RANGE(mode, 0, 4) },
 #endif /* CONFIG_MESH */
+	{ INT_RANGE(noscan, 0, 1) },
 	{ INT_RANGE(proactive_key_caching, 0, 1) },
 	{ INT_RANGE(disabled, 0, 2) },
 	{ STR(id_str) },
--- a/wpa_supplicant/config_file.c
+++ b/wpa_supplicant/config_file.c
@@ -766,6 +766,7 @@ static void wpa_config_write_network(FIL
 #endif /* IEEE8021X_EAPOL */
 	INT(mode);
 	INT(no_auto_peer);
+	INT(noscan);
 	INT(mesh_fwding);
 	INT(frequency);
 	INT(enable_edmg);
--- a/wpa_supplicant/mesh.c
+++ b/wpa_supplicant/mesh.c
@@ -506,6 +506,8 @@ static int wpa_supplicant_mesh_init(stru
 			   frequency);
 		goto out_free;
 	}
+	if (ssid->noscan)
+		conf->noscan = 1;
 
 	if (ssid->mesh_basic_rates == NULL) {
 		/*
--- a/wpa_supplicant/wpa_supplicant.c
+++ b/wpa_supplicant/wpa_supplicant.c
@@ -2463,7 +2463,7 @@ void ibss_mesh_setup_freq(struct wpa_sup
 	int ieee80211_mode = wpas_mode_to_ieee80211_mode(ssid->mode);
 	enum hostapd_hw_mode hw_mode;
 	struct hostapd_hw_modes *mode = NULL;
-	int ht40plus[] = { 36, 44, 52, 60, 100, 108, 116, 124, 132, 149, 157,
+	int ht40plus[] = { 1, 2, 3, 4, 5, 6, 36, 44, 52, 60, 100, 108, 116, 124, 132, 149, 157,
 			   184, 192 };
 	int bw80[] = { 5180, 5260, 5500, 5580, 5660, 5745, 5955,
 		       6035, 6115, 6195, 6275, 6355, 6435, 6515,
@@ -2471,7 +2471,7 @@ void ibss_mesh_setup_freq(struct wpa_sup
 	int bw160[] = { 5955, 6115, 6275, 6435, 6595, 6755, 6915 };
 	struct hostapd_channel_data *pri_chan = NULL, *sec_chan = NULL;
 	u8 channel;
-	int i, chan_idx, ht40 = -1, res, obss_scan = 1;
+	int i, chan_idx, ht40 = -1, res, obss_scan = !(ssid->noscan);
 	unsigned int j, k;
 	struct hostapd_freq_params vht_freq;
 	int chwidth, seg0, seg1;
@@ -2562,7 +2562,7 @@ void ibss_mesh_setup_freq(struct wpa_sup
 #endif /* CONFIG_HE_OVERRIDES */
 
 	/* Setup higher BW only for 5 GHz */
-	if (mode->mode != HOSTAPD_MODE_IEEE80211A)
+	if (mode->mode != HOSTAPD_MODE_IEEE80211A && !(ssid->noscan))
 		return;
 
 	for (chan_idx = 0; chan_idx < mode->num_channels; chan_idx++) {
--- a/wpa_supplicant/config_ssid.h
+++ b/wpa_supplicant/config_ssid.h
@@ -981,6 +981,8 @@ struct wpa_ssid {
 	 */
 	int no_auto_peer;
 
+	int noscan;
+
 	/**
 	 * mesh_rssi_threshold - Set mesh parameter mesh_rssi_threshold (dBm)
 	 *
