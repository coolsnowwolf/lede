From: Qi Liu <liuqi_colin@msn.com>

In order to support extroot, block extroot command has to be able to
discover and properly mount the rootfs_data volume in order to discover
the extroot volume. Currently this process can only discover MTD devices.
This patch leverages libfstools in a similar way as mount_root to
discover, initialize, and mount rootfs_data volume. It would enable any
device with non-MTD rootfs_data volume to support extroot, including x86.

Signed-off-by: Qi Liu <liuqi_colin@msn.com>
---
 CMakeLists.txt          |  4 ++--
 block.c                 | 40 ++++++++++++++++++++++++++++++++++++++++
 libfstools/fstype.h     | 12 ++++++++++++
 libfstools/libfstools.h | 11 +----------
 4 files changed, 55 insertions(+), 12 deletions(-)
 create mode 100644 libfstools/fstype.h

--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -78,9 +78,9 @@ INSTALL(TARGETS blockd RUNTIME DESTINATI
 ADD_EXECUTABLE(block block.c probe.c probe-libblkid.c)
 IF(DEFINED CMAKE_UBIFS_EXTROOT)
 	ADD_DEFINITIONS(-DUBIFS_EXTROOT)
-	TARGET_LINK_LIBRARIES(block blkid-tiny dl uci ubox ubus blobmsg_json ubi-utils ${json})
+	TARGET_LINK_LIBRARIES(block fstools blkid-tiny dl uci ubox ubus blobmsg_json ubi-utils ${json})
 ELSE(DEFINED CMAKE_UBIFS_EXTROOT)
-	TARGET_LINK_LIBRARIES(block blkid-tiny dl uci ubox ubus blobmsg_json ${json})
+	TARGET_LINK_LIBRARIES(block fstools blkid-tiny dl uci ubox ubus blobmsg_json ${json})
 ENDIF(DEFINED CMAKE_UBIFS_EXTROOT)
 INSTALL(TARGETS block RUNTIME DESTINATION sbin)
 
--- a/block.c
+++ b/block.c
@@ -44,6 +44,8 @@
 #include <libubox/vlist.h>
 #include <libubus.h>
 
+#include "libfstools/fstype.h"
+#include "libfstools/volume.h"
 #include "probe.h"
 
 #define AUTOFS_MOUNT_PATH       "/tmp/run/blockd/"
@@ -1696,6 +1698,44 @@ static int main_extroot(int argc, char *
        }
 #endif
 
+  /* Find volume using libfstools */
+	struct volume *data = volume_find("rootfs_data");
+	if (data) {
+		volume_init(data);
+
+	  switch (volume_identify(data)) {
+		case FS_EXT4: {
+			char cfg[] = "/tmp/ext4_cfg";
+
+			/* Mount volume and try extroot (using fstab from that vol) */
+			mkdir_p(cfg, 0755);
+			if (!mount(data->blk, cfg, "ext4", MS_NOATIME, NULL)) {
+				err = mount_extroot(cfg);
+				umount2(cfg, MNT_DETACH);
+			}
+			if (err < 0)
+				rmdir("/tmp/overlay");
+			rmdir(cfg);
+			return err;
+		}
+
+		case FS_F2FS: {
+			char cfg[] = "/tmp/f2fs_cfg";
+
+			/* Mount volume and try extroot (using fstab from that vol) */
+			mkdir_p(cfg, 0755);
+			if (!mount(data->blk, cfg, "f2fs", MS_NOATIME, NULL)) {
+				err = mount_extroot(cfg);
+				umount2(cfg, MNT_DETACH);
+			}
+			if (err < 0)
+				rmdir("/tmp/overlay");
+			rmdir(cfg);
+			return err;
+		}
+		}
+	}
+
 	/* As a last resort look for /etc/config/fstab on "rootfs" partition */
 	return mount_extroot(NULL);
 }
--- /dev/null
+++ b/libfstools/fstype.h
@@ -0,0 +1,13 @@
+#ifndef _FS_TYPE_H__
+#define _FS_TYPE_H__
+enum {
+	FS_NONE,
+	FS_SNAPSHOT,
+	FS_JFFS2,
+	FS_DEADCODE,
+	FS_UBIFS,
+	FS_F2FS,
+	FS_EXT4,
+	FS_TARGZ,
+};
+#endif
\ No newline at end of file
--- a/libfstools/libfstools.h
+++ b/libfstools/libfstools.h
@@ -18,20 +18,10 @@
 #include <libubox/blob.h>
 #include <libubox/ulog.h>
 #include <libubox/utils.h>
+#include "fstype.h"
 
 struct volume;
 
-enum {
-	FS_NONE,
-	FS_SNAPSHOT,
-	FS_JFFS2,
-	FS_DEADCODE,
-	FS_UBIFS,
-	FS_F2FS,
-	FS_EXT4,
-	FS_TARGZ,
-};
-
 enum fs_state {
 	FS_STATE_UNKNOWN,
 	FS_STATE_PENDING,
