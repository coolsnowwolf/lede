# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see docs/Kconfig-language.txt.
#

menu "Miscellaneous Utilities"

config BUSYBOX_CONFIG_ADJTIMEX
	bool "adjtimex (4.7 kb)"
	default BUSYBOX_DEFAULT_ADJTIMEX
	help
	Adjtimex reads and optionally sets adjustment parameters for
	the Linux clock adjustment algorithm.
config BUSYBOX_CONFIG_BBCONFIG
	bool "bbconfig (9.7 kb)"
	default BUSYBOX_DEFAULT_BBCONFIG
	help
	The bbconfig applet will print the config file with which
	busybox was built.

config BUSYBOX_CONFIG_FEATURE_COMPRESS_BBCONFIG
	bool "Compress bbconfig data"
	default BUSYBOX_DEFAULT_FEATURE_COMPRESS_BBCONFIG
	depends on BUSYBOX_CONFIG_BBCONFIG
	help
	Store bbconfig data in compressed form, uncompress them on-the-fly
	before output.

	If you have a really tiny busybox with few applets enabled (and
	bunzip2 isn't one of them), the overhead of the decompressor might
	be noticeable. Also, if you run executables directly from ROM
	and have very little memory, this might not be a win. Otherwise,
	you probably want this.
config BUSYBOX_CONFIG_BC
	bool "bc (45 kb)"
	default BUSYBOX_DEFAULT_BC
	select BUSYBOX_CONFIG_FEATURE_DC_BIG
	help
	bc is a command-line, arbitrary-precision calculator with a
	Turing-complete language. See the GNU bc manual
	(https://www.gnu.org/software/bc/manual/bc.html) and bc spec
	(http://pubs.opengroup.org/onlinepubs/9699919799/utilities/bc.html).

	This bc has five differences to the GNU bc:
	  1) The period (.) is a shortcut for "last", as in the BSD bc.
	  2) Arrays are copied before being passed as arguments to
	     functions. This behavior is required by the bc spec.
	  3) Arrays can be passed to the builtin "length" function to get
	     the number of elements in the array. This prints "1":
		a[0] = 0; length(a[])
	  4) The precedence of the boolean "not" operator (!) is equal to
	     that of the unary minus (-) negation operator. This still
	     allows POSIX-compliant scripts to work while somewhat
	     preserving expected behavior (versus C) and making parsing
	     easier.
	  5) "read()" accepts expressions, not only numeric literals.

config BUSYBOX_CONFIG_DC
	bool "dc (36 kb)"
	default BUSYBOX_DEFAULT_DC
	help
	dc is a reverse-polish notation command-line calculator which
	supports unlimited precision arithmetic. See the FreeBSD man page
	(https://www.unix.com/man-page/FreeBSD/1/dc/) and GNU dc manual
	(https://www.gnu.org/software/bc/manual/dc-1.05/html_mono/dc.html).

	This dc has a few differences from the two above:
	  1) When printing a byte stream (command "P"), this dc follows what
	     the FreeBSD dc does.
	  2) Implements the GNU extensions for divmod ("~") and
	     modular exponentiation ("|").
	  3) Implements all FreeBSD extensions, except for "J" and "M".
	  4) Like the FreeBSD dc, this dc supports extended registers.
	     However, they are implemented differently. When it encounters
	     whitespace where a register should be, it skips the whitespace.
	     If the character following is not a lowercase letter, an error
	     is issued. Otherwise, the register name is parsed by the
	     following regex: [a-z][a-z0-9_]*
	     This generally means that register names will be surrounded by
	     whitespace. Examples:
		l idx s temp L index S temp2 < do_thing
	     Also note that, like the FreeBSD dc, extended registers are not
	     allowed unless the "-x" option is given.

if BC || BUSYBOX_CONFIG_DC  # for menuconfig indenting

config BUSYBOX_CONFIG_FEATURE_DC_BIG
	bool "Use bc code base for dc (larger, more features)"
	default BUSYBOX_DEFAULT_FEATURE_DC_BIG

config BUSYBOX_CONFIG_FEATURE_DC_LIBM
	bool "Enable power and exp functions (requires libm)"
	default BUSYBOX_DEFAULT_FEATURE_DC_LIBM
	depends on BUSYBOX_CONFIG_DC && !BUSYBOX_CONFIG_BC && !BUSYBOX_CONFIG_FEATURE_DC_BIG
	help
	Enable power and exp functions.
	NOTE: This will require libm to be present for linking.

config BUSYBOX_CONFIG_FEATURE_BC_INTERACTIVE
	bool "Interactive mode (+4kb)"
	default BUSYBOX_DEFAULT_FEATURE_BC_INTERACTIVE
	depends on BUSYBOX_CONFIG_BC || (BUSYBOX_CONFIG_DC && BUSYBOX_CONFIG_FEATURE_DC_BIG)
	help
	Enable interactive mode: when started on a tty,
	^C interrupts execution and returns to command line,
	errors also return to command line instead of exiting,
	line editing with history is available.

	With this option off, input can still be taken from tty,
	but all errors are fatal, ^C is fatal,
	tty is treated exactly the same as any other
	standard input (IOW: no line editing).

config BUSYBOX_CONFIG_FEATURE_BC_LONG_OPTIONS
	bool "Enable bc/dc long options"
	default BUSYBOX_DEFAULT_FEATURE_BC_LONG_OPTIONS
	depends on BUSYBOX_CONFIG_BC || (BUSYBOX_CONFIG_DC && BUSYBOX_CONFIG_FEATURE_DC_BIG)

endif
config BUSYBOX_CONFIG_BEEP
	bool "beep (2.4 kb)"
	default BUSYBOX_DEFAULT_BEEP
	help
	The beep applets beeps in a given freq/Hz.

config BUSYBOX_CONFIG_FEATURE_BEEP_FREQ
	int "default frequency"
	range 20 50000	# allowing 0 here breaks the build
	default BUSYBOX_DEFAULT_FEATURE_BEEP_FREQ
	depends on BUSYBOX_CONFIG_BEEP
	help
	Frequency for default beep.

config BUSYBOX_CONFIG_FEATURE_BEEP_LENGTH_MS
	int "default length"
	range 0 2147483647
	default BUSYBOX_DEFAULT_FEATURE_BEEP_LENGTH_MS
	depends on BUSYBOX_CONFIG_BEEP
	help
	Length in ms for default beep.
config BUSYBOX_CONFIG_CHAT
	bool "chat (6.3 kb)"
	default BUSYBOX_DEFAULT_CHAT
	help
	Simple chat utility.

config BUSYBOX_CONFIG_FEATURE_CHAT_NOFAIL
	bool "Enable NOFAIL expect strings"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_NOFAIL
	help
	When enabled expect strings which are started with a dash trigger
	no-fail mode. That is when expectation is not met within timeout
	the script is not terminated but sends next SEND string and waits
	for next EXPECT string. This allows to compose far more flexible
	scripts.

config BUSYBOX_CONFIG_FEATURE_CHAT_TTY_HIFI
	bool "Force STDIN to be a TTY"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_TTY_HIFI
	help
	Original chat always treats STDIN as a TTY device and sets for it
	so-called raw mode. This option turns on such behaviour.

config BUSYBOX_CONFIG_FEATURE_CHAT_IMPLICIT_CR
	bool "Enable implicit Carriage Return"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_IMPLICIT_CR
	help
	When enabled make chat to terminate all SEND strings with a "\r"
	unless "\c" is met anywhere in the string.

config BUSYBOX_CONFIG_FEATURE_CHAT_SWALLOW_OPTS
	bool "Swallow options"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_SWALLOW_OPTS
	help
	Busybox chat require no options. To make it not fail when used
	in place of original chat (which has a bunch of options) turn
	this on.

config BUSYBOX_CONFIG_FEATURE_CHAT_SEND_ESCAPES
	bool "Support weird SEND escapes"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_SEND_ESCAPES
	help
	Original chat uses some escape sequences in SEND arguments which
	are not sent to device but rather performs special actions.
	E.g. "\K" means to send a break sequence to device.
	"\d" delays execution for a second, "\p" -- for a 1/100 of second.
	Before turning this option on think twice: do you really need them?

config BUSYBOX_CONFIG_FEATURE_CHAT_VAR_ABORT_LEN
	bool "Support variable-length ABORT conditions"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_VAR_ABORT_LEN
	help
	Original chat uses fixed 50-bytes length ABORT conditions. Say N here.

config BUSYBOX_CONFIG_FEATURE_CHAT_CLR_ABORT
	bool "Support revoking of ABORT conditions"
	depends on BUSYBOX_CONFIG_CHAT
	default BUSYBOX_DEFAULT_FEATURE_CHAT_CLR_ABORT
	help
	Support CLR_ABORT directive.
config BUSYBOX_CONFIG_CONSPY
	bool "conspy (10 kb)"
	default BUSYBOX_DEFAULT_CONSPY
	help
	A text-mode VNC like program for Linux virtual terminals.
	example:  conspy NUM      shared access to console num
	or        conspy -nd NUM  screenshot of console num
	or        conspy -cs NUM  poor man's GNU screen like
config BUSYBOX_CONFIG_CROND
	bool "crond (14 kb)"
	default BUSYBOX_DEFAULT_CROND
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	Crond is a background daemon that parses individual crontab
	files and executes commands on behalf of the users in question.
	This is a port of dcron from slackware. It uses files of the
	format /var/spool/cron/crontabs/<username> files, for example:
		$ cat /var/spool/cron/crontabs/root
		# Run daily cron jobs at 4:40 every day:
		40 4 * * * /etc/cron/daily > /dev/null 2>&1

config BUSYBOX_CONFIG_FEATURE_CROND_D
	bool "Support -d (redirect output to stderr)"
	depends on BUSYBOX_CONFIG_CROND
	default BUSYBOX_DEFAULT_FEATURE_CROND_D
	help
	-d N sets loglevel (0:most verbose) and directs all output to stderr.

config BUSYBOX_CONFIG_FEATURE_CROND_CALL_SENDMAIL
	bool "Report command output via email (using sendmail)"
	default BUSYBOX_DEFAULT_FEATURE_CROND_CALL_SENDMAIL
	depends on BUSYBOX_CONFIG_CROND
	help
	Command output will be sent to corresponding user via email.

config BUSYBOX_CONFIG_FEATURE_CROND_SPECIAL_TIMES
	bool "Support special times (@reboot, @daily, etc) in crontabs"
	default BUSYBOX_DEFAULT_FEATURE_CROND_SPECIAL_TIMES
	depends on BUSYBOX_CONFIG_CROND
	help
	string        meaning
	------        -------
	@reboot       Run once, at startup
	@yearly       Run once a year:  "0 0 1 1 *"
	@annually     Same as @yearly:  "0 0 1 1 *"
	@monthly      Run once a month: "0 0 1 * *"
	@weekly       Run once a week:  "0 0 * * 0"
	@daily        Run once a day:   "0 0 * * *"
	@midnight     Same as @daily:   "0 0 * * *"
	@hourly       Run once an hour: "0 * * * *"

config BUSYBOX_CONFIG_FEATURE_CROND_DIR
	string "crond spool directory"
	default BUSYBOX_DEFAULT_FEATURE_CROND_DIR
	depends on BUSYBOX_CONFIG_CROND || BUSYBOX_CONFIG_CRONTAB
	help
	Location of crond spool.
config BUSYBOX_CONFIG_CRONTAB
	bool "crontab (10 kb)"
	default BUSYBOX_DEFAULT_CRONTAB
	help
	Crontab manipulates the crontab for a particular user. Only
	the superuser may specify a different user and/or crontab directory.
	Note that busybox binary must be setuid root for this applet to
	work properly.
config BUSYBOX_CONFIG_DEVFSD
	bool "devfsd (obsolete)"
	default BUSYBOX_DEFAULT_DEVFSD
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	This is deprecated and should NOT be used anymore.
	Use linux >= 2.6 (optionally with hotplug) and mdev instead!
	See docs/mdev.txt for detailed instructions on how to use mdev
	instead.

	Provides compatibility with old device names on a devfs systems.
	You should set it to true if you have devfs enabled.
	The following keywords in devsfd.conf are supported:
	"CLEAR_CONFIG", "INCLUDE", "OPTIONAL_INCLUDE", "RESTORE",
	"PERMISSIONS", "EXECUTE", "COPY", "IGNORE",
	"MKOLDCOMPAT", "MKNEWCOMPAT","RMOLDCOMPAT", "RMNEWCOMPAT".

	But only if they are written UPPERCASE!!!!!!!!

config BUSYBOX_CONFIG_DEVFSD_MODLOAD
	bool "Adds support for MODLOAD keyword in devsfd.conf"
	default BUSYBOX_DEFAULT_DEVFSD_MODLOAD
	depends on BUSYBOX_CONFIG_DEVFSD
	help
	This actually doesn't work with busybox modutils but needs
	the external modutils.

config BUSYBOX_CONFIG_DEVFSD_FG_NP
	bool "Enable the -fg and -np options"
	default BUSYBOX_DEFAULT_DEVFSD_FG_NP
	depends on BUSYBOX_CONFIG_DEVFSD
	help
	-fg  Run the daemon in the foreground.
	-np  Exit after parsing config. Do not poll for events.

config BUSYBOX_CONFIG_DEVFSD_VERBOSE
	bool "Increases logging (and size)"
	default BUSYBOX_DEFAULT_DEVFSD_VERBOSE
	depends on BUSYBOX_CONFIG_DEVFSD
	help
	Increases logging to stderr or syslog.

config BUSYBOX_CONFIG_FEATURE_DEVFS
	bool "Use devfs names for all devices (obsolete)"
	default BUSYBOX_DEFAULT_FEATURE_DEVFS
	help
	This is obsolete and should NOT be used anymore.
	Use linux >= 2.6 (optionally with hotplug) and mdev instead!

	For legacy systems -- if there is no way around devfsd -- this
	tells busybox to look for names like /dev/loop/0 instead of
	/dev/loop0. If your /dev directory has normal names instead of
	devfs names, you don't want this.
config BUSYBOX_CONFIG_DEVMEM
	bool "devmem (2.5 kb)"
	default BUSYBOX_DEFAULT_DEVMEM
	help
	devmem is a small program that reads and writes from physical
	memory using /dev/mem.
config BUSYBOX_CONFIG_FBSPLASH
	bool "fbsplash (26 kb)"
	default BUSYBOX_DEFAULT_FBSPLASH
	help
	Shows splash image and progress bar on framebuffer device.
	Can be used during boot phase of an embedded device.
	Usage:
	- use kernel option 'vga=xxx' or otherwise enable fb device.
	- put somewhere fbsplash.cfg file and an image in .ppm format.
	- $ setsid fbsplash [params] &
	    -c: hide cursor
	    -d /dev/fbN: framebuffer device (if not /dev/fb0)
	    -s path_to_image_file (can be "-" for stdin)
	    -i path_to_cfg_file (can be "-" for stdin)
	    -f path_to_fifo (can be "-" for stdin)
	- if you want to run it only in presence of kernel parameter:
	    grep -q "fbsplash=on" </proc/cmdline && setsid fbsplash [params] &
	- commands for fifo:
	    "NN" (ASCII decimal number) - percentage to show on progress bar
	    "exit" - well you guessed it
config BUSYBOX_CONFIG_FLASH_ERASEALL
	bool "flash_eraseall (5.9 kb)"
	default BUSYBOX_DEFAULT_FLASH_ERASEALL  # doesn't build on Ubuntu 8.04
	help
	The flash_eraseall binary from mtd-utils as of git head c4c6a59eb.
	This utility is used to erase the whole MTD device.
config BUSYBOX_CONFIG_FLASH_LOCK
	bool "flash_lock (2.1 kb)"
	default BUSYBOX_DEFAULT_FLASH_LOCK  # doesn't build on Ubuntu 8.04
	help
	The flash_lock binary from mtd-utils as of git head 5ec0c10d0. This
	utility locks part or all of the flash device.

config BUSYBOX_CONFIG_FLASH_UNLOCK
	bool "flash_unlock (1.3 kb)"
	default BUSYBOX_DEFAULT_FLASH_UNLOCK  # doesn't build on Ubuntu 8.04
	help
	The flash_unlock binary from mtd-utils as of git head 5ec0c10d0. This
	utility unlocks part or all of the flash device.
config BUSYBOX_CONFIG_FLASHCP
	bool "flashcp (5.3 kb)"
	default BUSYBOX_DEFAULT_FLASHCP  # doesn't build on Ubuntu 8.04
	help
	The flashcp binary, inspired by mtd-utils as of git head 5eceb74f7.
	This utility is used to copy images into a MTD device.
config BUSYBOX_CONFIG_HDPARM
	bool "hdparm (25 kb)"
	default BUSYBOX_DEFAULT_HDPARM
	help
	Get/Set hard drive parameters. Primarily intended for ATA
	drives.

config BUSYBOX_CONFIG_FEATURE_HDPARM_GET_IDENTITY
	bool "Support obtaining detailed information directly from drives"
	default BUSYBOX_DEFAULT_FEATURE_HDPARM_GET_IDENTITY
	depends on BUSYBOX_CONFIG_HDPARM
	help
	Enable the -I and -i options to obtain detailed information
	directly from drives about their capabilities and supported ATA
	feature set. If no device name is specified, hdparm will read
	identify data from stdin. Enabling this option will add about 16k...

config BUSYBOX_CONFIG_FEATURE_HDPARM_HDIO_SCAN_HWIF
	bool "Register an IDE interface (DANGEROUS)"
	default BUSYBOX_DEFAULT_FEATURE_HDPARM_HDIO_SCAN_HWIF
	depends on BUSYBOX_CONFIG_HDPARM
	help
	Enable the 'hdparm -R' option to register an IDE interface.
	This is dangerous stuff, so you should probably say N.

config BUSYBOX_CONFIG_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF
	bool "Un-register an IDE interface (DANGEROUS)"
	default BUSYBOX_DEFAULT_FEATURE_HDPARM_HDIO_UNREGISTER_HWIF
	depends on BUSYBOX_CONFIG_HDPARM
	help
	Enable the 'hdparm -U' option to un-register an IDE interface.
	This is dangerous stuff, so you should probably say N.

config BUSYBOX_CONFIG_FEATURE_HDPARM_HDIO_DRIVE_RESET
	bool "Perform device reset (DANGEROUS)"
	default BUSYBOX_DEFAULT_FEATURE_HDPARM_HDIO_DRIVE_RESET
	depends on BUSYBOX_CONFIG_HDPARM
	help
	Enable the 'hdparm -w' option to perform a device reset.
	This is dangerous stuff, so you should probably say N.

config BUSYBOX_CONFIG_FEATURE_HDPARM_HDIO_TRISTATE_HWIF
	bool "Tristate device for hotswap (DANGEROUS)"
	default BUSYBOX_DEFAULT_FEATURE_HDPARM_HDIO_TRISTATE_HWIF
	depends on BUSYBOX_CONFIG_HDPARM
	help
	Enable the 'hdparm -x' option to tristate device for hotswap,
	and the '-b' option to get/set bus state. This is dangerous
	stuff, so you should probably say N.

config BUSYBOX_CONFIG_FEATURE_HDPARM_HDIO_GETSET_DMA
	bool "Get/set using_dma flag"
	default BUSYBOX_DEFAULT_FEATURE_HDPARM_HDIO_GETSET_DMA
	depends on BUSYBOX_CONFIG_HDPARM
	help
	Enable the 'hdparm -d' option to get/set using_dma flag.
config BUSYBOX_CONFIG_HEXEDIT
	bool "hexedit (21 kb)"
	default BUSYBOX_DEFAULT_HEXEDIT
	help
	Edit file in hexadecimal.
config BUSYBOX_CONFIG_I2CGET
	bool "i2cget (5.5 kb)"
	default BUSYBOX_DEFAULT_I2CGET
	help
	Read from I2C/SMBus chip registers.

config BUSYBOX_CONFIG_I2CSET
	bool "i2cset (6.7 kb)"
	default BUSYBOX_DEFAULT_I2CSET
	help
	Set I2C registers.

config BUSYBOX_CONFIG_I2CDUMP
	bool "i2cdump (7.1 kb)"
	default BUSYBOX_DEFAULT_I2CDUMP
	help
	Examine I2C registers.

config BUSYBOX_CONFIG_I2CDETECT
	bool "i2cdetect (7.1 kb)"
	default BUSYBOX_DEFAULT_I2CDETECT
	help
	Detect I2C chips.

config BUSYBOX_CONFIG_I2CTRANSFER
	bool "i2ctransfer (4.0 kb)"
	default BUSYBOX_DEFAULT_I2CTRANSFER
	help
	Send user-defined I2C messages in one transfer.

config BUSYBOX_CONFIG_INOTIFYD
	bool "inotifyd (3.6 kb)"
	default BUSYBOX_DEFAULT_INOTIFYD  # doesn't build on Knoppix 5
	help
	Simple inotify daemon. Reports filesystem changes. Requires
	kernel >= 2.6.13
config BUSYBOX_CONFIG_LESS
	bool "less (16 kb)"
	default BUSYBOX_DEFAULT_LESS
	help
	'less' is a pager, meaning that it displays text files. It possesses
	a wide array of features, and is an improvement over 'more'.

config BUSYBOX_CONFIG_FEATURE_LESS_MAXLINES
	int "Max number of input lines less will try to eat"
	default BUSYBOX_DEFAULT_FEATURE_LESS_MAXLINES
	depends on BUSYBOX_CONFIG_LESS

config BUSYBOX_CONFIG_FEATURE_LESS_BRACKETS
	bool "Enable bracket searching"
	default BUSYBOX_DEFAULT_FEATURE_LESS_BRACKETS
	depends on BUSYBOX_CONFIG_LESS
	help
	This option adds the capability to search for matching left and right
	brackets, facilitating programming.

config BUSYBOX_CONFIG_FEATURE_LESS_FLAGS
	bool "Enable -m/-M"
	default BUSYBOX_DEFAULT_FEATURE_LESS_FLAGS
	depends on BUSYBOX_CONFIG_LESS
	help
	The -M/-m flag enables a more sophisticated status line.

config BUSYBOX_CONFIG_FEATURE_LESS_TRUNCATE
	bool "Enable -S"
	default BUSYBOX_DEFAULT_FEATURE_LESS_TRUNCATE
	depends on BUSYBOX_CONFIG_LESS
	help
	The -S flag causes long lines to be truncated rather than
	wrapped.

config BUSYBOX_CONFIG_FEATURE_LESS_MARKS
	bool "Enable marks"
	default BUSYBOX_DEFAULT_FEATURE_LESS_MARKS
	depends on BUSYBOX_CONFIG_LESS
	help
	Marks enable positions in a file to be stored for easy reference.

config BUSYBOX_CONFIG_FEATURE_LESS_REGEXP
	bool "Enable regular expressions"
	default BUSYBOX_DEFAULT_FEATURE_LESS_REGEXP
	depends on BUSYBOX_CONFIG_LESS
	help
	Enable regular expressions, allowing complex file searches.

config BUSYBOX_CONFIG_FEATURE_LESS_WINCH
	bool "Enable automatic resizing on window size changes"
	default BUSYBOX_DEFAULT_FEATURE_LESS_WINCH
	depends on BUSYBOX_CONFIG_LESS
	help
	Makes less track window size changes.

config BUSYBOX_CONFIG_FEATURE_LESS_ASK_TERMINAL
	bool "Use 'tell me cursor position' ESC sequence to measure window"
	default BUSYBOX_DEFAULT_FEATURE_LESS_ASK_TERMINAL
	depends on BUSYBOX_CONFIG_FEATURE_LESS_WINCH
	help
	Makes less track window size changes.
	If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
	this option makes less perform a last-ditch effort to find it:
	position cursor to 999,999 and ask terminal to report real
	cursor position using "ESC [ 6 n" escape sequence, then read stdin.
	This is not clean but helps a lot on serial lines and such.

config BUSYBOX_CONFIG_FEATURE_LESS_DASHCMD
	bool "Enable flag changes ('-' command)"
	default BUSYBOX_DEFAULT_FEATURE_LESS_DASHCMD
	depends on BUSYBOX_CONFIG_LESS
	help
	This enables the ability to change command-line flags within
	less itself ('-' keyboard command).

config BUSYBOX_CONFIG_FEATURE_LESS_LINENUMS
	bool "Enable -N (dynamic switching of line numbers)"
	default BUSYBOX_DEFAULT_FEATURE_LESS_LINENUMS
	depends on BUSYBOX_CONFIG_FEATURE_LESS_DASHCMD

config BUSYBOX_CONFIG_FEATURE_LESS_RAW
	bool "Enable -R ('raw control characters')"
	default BUSYBOX_DEFAULT_FEATURE_LESS_RAW
	depends on BUSYBOX_CONFIG_FEATURE_LESS_DASHCMD
	help
	This is essential for less applet to work with tools that use colors
	and paging, such as git, systemd tools or nmcli.

config BUSYBOX_CONFIG_FEATURE_LESS_ENV
	bool "Take options from $LESS environment variable"
	default BUSYBOX_DEFAULT_FEATURE_LESS_ENV
	depends on BUSYBOX_CONFIG_FEATURE_LESS_DASHCMD
	help
	This is essential for less applet to work with tools that use colors
	and paging, such as git, systemd tools or nmcli.
config BUSYBOX_CONFIG_LOCK
	bool "lock"
	default BUSYBOX_DEFAULT_LOCK
	help
	  Small utility for using locks in scripts
config BUSYBOX_CONFIG_LSSCSI
	bool "lsscsi (2.5 kb)"
	default BUSYBOX_DEFAULT_LSSCSI
	help
	lsscsi is a utility for displaying information about SCSI buses in the
	system and devices connected to them.

	This version uses sysfs (/sys/bus/scsi/devices) only.
config BUSYBOX_CONFIG_MAKEDEVS
	bool "makedevs (9.2 kb)"
	default BUSYBOX_DEFAULT_MAKEDEVS
	help
	'makedevs' is a utility used to create a batch of devices with
	one command.

	There are two choices for command line behaviour, the interface
	as used by LEAF/Linux Router Project, or a device table file.

	'leaf' is traditionally what busybox follows, it allows multiple
	devices of a particluar type to be created per command.
	e.g. /dev/hda[0-9]
	Device properties are passed as command line arguments.

	'table' reads device properties from a file or stdin, allowing
	a batch of unrelated devices to be made with one command.
	User/group names are allowed as an alternative to uid/gid.

choice
	prompt "Choose makedevs behaviour"
	depends on BUSYBOX_CONFIG_MAKEDEVS
	default BUSYBOX_CONFIG_FEATURE_MAKEDEVS_TABLE

config BUSYBOX_CONFIG_FEATURE_MAKEDEVS_LEAF
	bool "leaf"

config BUSYBOX_CONFIG_FEATURE_MAKEDEVS_TABLE
	bool "table"

endchoice
config BUSYBOX_CONFIG_MAN
	bool "man (26 kb)"
	default BUSYBOX_DEFAULT_MAN
	help
	Format and display manual pages.
config BUSYBOX_CONFIG_MICROCOM
	bool "microcom (5.7 kb)"
	default BUSYBOX_DEFAULT_MICROCOM
	help
	The poor man's minicom utility for chatting with serial port devices.
config BUSYBOX_CONFIG_MIM
	bool "mim (0.5 kb)"
	default BUSYBOX_DEFAULT_MIM
	depends on BUSYBOX_CONFIG_FEATURE_SH_EMBEDDED_SCRIPTS
	help
	Run a script from a Makefile-like specification file.
	Unlike 'make' dependencies aren't supported.
config BUSYBOX_CONFIG_MT
	bool "mt (2.5 kb)"
	default BUSYBOX_DEFAULT_MT
	help
	mt is used to control tape devices. You can use the mt utility
	to advance or rewind a tape past a specified number of archive
	files on the tape.
config BUSYBOX_CONFIG_NANDWRITE
	bool "nandwrite (4.8 kb)"
	default BUSYBOX_DEFAULT_NANDWRITE
	help
	Write to the specified MTD device, with bad blocks awareness

config BUSYBOX_CONFIG_NANDDUMP
	bool "nanddump (5.2 kb)"
	default BUSYBOX_DEFAULT_NANDDUMP
	help
	Dump the content of raw NAND chip
config BUSYBOX_CONFIG_PARTPROBE
	bool "partprobe (3.5 kb)"
	default BUSYBOX_DEFAULT_PARTPROBE
	help
	Ask kernel to rescan partition table.
config BUSYBOX_CONFIG_RAIDAUTORUN
	bool "raidautorun (1.3 kb)"
	default BUSYBOX_DEFAULT_RAIDAUTORUN
	help
	raidautorun tells the kernel md driver to
	search and start RAID arrays.
config BUSYBOX_CONFIG_READAHEAD
	bool "readahead (1.5 kb)"
	default BUSYBOX_DEFAULT_READAHEAD
	depends on BUSYBOX_CONFIG_LFS
	help
	Preload the files listed on the command line into RAM cache so that
	subsequent reads on these files will not block on disk I/O.

	This applet just calls the readahead(2) system call on each file.
	It is mainly useful in system startup scripts to preload files
	or executables before they are used. When used at the right time
	(in particular when a CPU bound process is running) it can
	significantly speed up system startup.

	As readahead(2) blocks until each file has been read, it is best to
	run this applet as a background job.
config BUSYBOX_CONFIG_RFKILL
	bool "rfkill (4.4 kb)"
	default BUSYBOX_DEFAULT_RFKILL # doesn't build on Ubuntu 9.04
	help
	Enable/disable wireless devices.

	rfkill list : list all wireless devices
	rfkill list bluetooth : list all bluetooth devices
	rfkill list 1 : list device corresponding to the given index
	rfkill block|unblock wlan : block/unblock all wlan(wifi) devices

config BUSYBOX_CONFIG_RUNLEVEL
	bool "runlevel (559 bytes)"
	default BUSYBOX_DEFAULT_RUNLEVEL
	depends on BUSYBOX_CONFIG_FEATURE_UTMP
	help
	Find the current and previous system runlevel.

	This applet uses utmp but does not rely on busybox supporing
	utmp on purpose. It is used by e.g. emdebian via /etc/init.d/rc.
config BUSYBOX_CONFIG_RX
	bool "rx (2.9 kb)"
	default BUSYBOX_DEFAULT_RX
	help
	Receive files using the Xmodem protocol.
config BUSYBOX_CONFIG_SETFATTR
	bool "setfattr (3.7 kb)"
	default BUSYBOX_DEFAULT_SETFATTR
	help
	Set/delete extended attributes on files
config BUSYBOX_CONFIG_SETSERIAL
	bool "setserial (6.9 kb)"
	default BUSYBOX_DEFAULT_SETSERIAL
	help
	Retrieve or set Linux serial port.
config BUSYBOX_CONFIG_STRINGS
	bool "strings (4.6 kb)"
	default BUSYBOX_DEFAULT_STRINGS
	help
	strings prints the printable character sequences for each file
	specified.
config BUSYBOX_CONFIG_TIME
	bool "time (6.8 kb)"
	default BUSYBOX_DEFAULT_TIME
	help
	The time command runs the specified program with the given arguments.
	When the command finishes, time writes a message to standard output
	giving timing statistics about this program run.
config BUSYBOX_CONFIG_TS
	bool "ts (450 bytes)"
	default BUSYBOX_DEFAULT_TS
config BUSYBOX_CONFIG_TTYSIZE
	bool "ttysize (432 bytes)"
	default BUSYBOX_DEFAULT_TTYSIZE
	help
	A replacement for "stty size". Unlike stty, can report only width,
	only height, or both, in any order. It also does not complain on
	error, but returns default 80x24.
	Usage in shell scripts: width=`ttysize w`.
config BUSYBOX_CONFIG_UBIATTACH
	bool "ubiattach (4.2 kb)"
	default BUSYBOX_DEFAULT_UBIATTACH
	help
	Attach MTD device to an UBI device.

config BUSYBOX_CONFIG_UBIDETACH
	bool "ubidetach (4.1 kb)"
	default BUSYBOX_DEFAULT_UBIDETACH
	help
	Detach MTD device from an UBI device.

config BUSYBOX_CONFIG_UBIMKVOL
	bool "ubimkvol (5.3 kb)"
	default BUSYBOX_DEFAULT_UBIMKVOL
	help
	Create a UBI volume.

config BUSYBOX_CONFIG_UBIRMVOL
	bool "ubirmvol (4.9 kb)"
	default BUSYBOX_DEFAULT_UBIRMVOL
	help
	Delete a UBI volume.

config BUSYBOX_CONFIG_UBIRSVOL
	bool "ubirsvol (4.2 kb)"
	default BUSYBOX_DEFAULT_UBIRSVOL
	help
	Resize a UBI volume.

config BUSYBOX_CONFIG_UBIUPDATEVOL
	bool "ubiupdatevol (5.2 kb)"
	default BUSYBOX_DEFAULT_UBIUPDATEVOL
	help
	Update a UBI volume.
config BUSYBOX_CONFIG_UBIRENAME
	bool "ubirename (2.4 kb)"
	default BUSYBOX_DEFAULT_UBIRENAME
	help
	Utility to rename UBI volumes
config BUSYBOX_CONFIG_VOLNAME
	bool "volname (1.6 kb)"
	default BUSYBOX_DEFAULT_VOLNAME
	help
	Prints a CD-ROM volume name.
config BUSYBOX_CONFIG_WATCHDOG
	bool "watchdog (5.3 kb)"
	default BUSYBOX_DEFAULT_WATCHDOG
	help
	The watchdog utility is used with hardware or software watchdog
	device drivers. It opens the specified watchdog device special file
	and periodically writes a magic character to the device. If the
	watchdog applet ever fails to write the magic character within a
	certain amount of time, the watchdog device assumes the system has
	hung, and will cause the hardware to reboot.

endmenu
