From: Felix Fietkau <nbd@nbd.name>
Subject: kernel: when KALLSYMS is disabled, print module address + size for matching backtrace entries

[john@phrozen.org: felix will add this to his upstream queue]

lede-commit 53827cdc824556cda910b23ce5030c363b8f1461
Signed-off-by: Felix Fietkau <nbd@nbd.name>
---
 lib/vsprintf.c | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -940,8 +940,10 @@ char *symbol_string(char *buf, char *end
 		    struct printf_spec spec, const char *fmt)
 {
 	unsigned long value;
-#ifdef CONFIG_KALLSYMS
 	char sym[KSYM_SYMBOL_LEN];
+#ifndef CONFIG_KALLSYMS
+	struct module *mod;
+	int len;
 #endif
 
 	if (fmt[1] == 'R')
@@ -958,8 +960,14 @@ char *symbol_string(char *buf, char *end
 
 	return string_nocheck(buf, end, sym, spec);
 #else
-	return special_hex_number(buf, end, value, sizeof(void *));
+	len = snprintf(sym, sizeof(sym), "0x%lx", value);
+	mod = __module_address(value);
+	if (mod)
+		snprintf(sym + len, sizeof(sym) - len, " [%s@%p+0x%x]",
+			 mod->name, mod->core_layout.base,
+			 mod->core_layout.size);
 #endif
+	return string(buf, end, sym, spec);
 }
 
 static const struct printf_spec default_str_spec = {
