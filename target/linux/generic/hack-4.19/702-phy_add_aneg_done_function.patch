--- a/include/linux/phy.h
+++ b/include/linux/phy.h
@@ -557,6 +557,12 @@ struct phy_driver {
 	/* Determines the negotiated speed and duplex */
 	int (*read_status)(struct phy_device *phydev);
 
+	/* 
+	 * Update the value in phydev->link to reflect the 
+	 * current link value
+	 */
+	int (*update_link)(struct phy_device *phydev);
+
 	/* Clears any pending interrupts */
 	int (*ack_interrupt)(struct phy_device *phydev);
 
--- a/drivers/net/phy/phy_device.c
+++ b/drivers/net/phy/phy_device.c
@@ -1583,6 +1583,9 @@ int genphy_update_link(struct phy_device
 {
 	int status;
 
+	if (phydev->drv && phydev->drv->update_link)
+		return phydev->drv->update_link(phydev);
+
 	/* The link state is latched low so that momentary link
 	 * drops can be detected. Do not double-read the status
 	 * in polling mode to detect such short link drops.
