--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2224,12 +2224,8 @@ struct net_device {
 #if IS_ENABLED(CONFIG_AX25)
 	struct ax25_dev	__rcu	*ax25_ptr;
 #endif
-#if IS_ENABLED(CONFIG_CFG80211)
 	struct wireless_dev	*ieee80211_ptr;
-#endif
-#if IS_ENABLED(CONFIG_IEEE802154) || IS_ENABLED(CONFIG_6LOWPAN)
 	struct wpan_dev		*ieee802154_ptr;
-#endif
 #if IS_ENABLED(CONFIG_MPLS_ROUTING)
 	struct mpls_dev __rcu	*mpls_ptr;
 #endif
--- a/include/net/cfg802154.h
+++ b/include/net/cfg802154.h
@@ -513,7 +513,6 @@ struct wpan_dev {
 
 #define to_phy(_dev)	container_of(_dev, struct wpan_phy, dev)
 
-#if IS_ENABLED(CONFIG_IEEE802154) || IS_ENABLED(CONFIG_6LOWPAN)
 static inline int
 wpan_dev_hard_header(struct sk_buff *skb, struct net_device *dev,
 		     const struct ieee802154_addr *daddr,
@@ -524,7 +523,6 @@ wpan_dev_hard_header(struct sk_buff *skb
 
 	return wpan_dev->header_ops->create(skb, dev, daddr, saddr, len);
 }
-#endif
 
 struct wpan_phy *
 wpan_phy_new(const struct cfg802154_ops *ops, size_t priv_size);
--- a/net/batman-adv/hard-interface.c
+++ b/net/batman-adv/hard-interface.c
@@ -309,11 +309,9 @@ static bool batadv_is_cfg80211_netdev(st
 	if (!net_device)
 		return false;
 
-#if IS_ENABLED(CONFIG_CFG80211)
 	/* cfg80211 drivers have to set ieee80211_ptr */
 	if (net_device->ieee80211_ptr)
 		return true;
-#endif
 
 	return false;
 }
--- a/net/core/net-sysfs.c
+++ b/net/core/net-sysfs.c
@@ -769,6 +769,7 @@ static const struct attribute_group nets
 	.attrs  = netstat_attrs,
 };
 
+#if IS_ENABLED(CONFIG_WIRELESS_EXT) || IS_ENABLED(CONFIG_CFG80211)
 static struct attribute *wireless_attrs[] = {
 	NULL
 };
@@ -777,19 +778,7 @@ static const struct attribute_group wire
 	.name = "wireless",
 	.attrs = wireless_attrs,
 };
-
-static bool wireless_group_needed(struct net_device *ndev)
-{
-#if IS_ENABLED(CONFIG_CFG80211)
-	if (ndev->ieee80211_ptr)
-		return true;
 #endif
-#if IS_ENABLED(CONFIG_WIRELESS_EXT)
-	if (ndev->wireless_handlers)
-		return true;
-#endif
-	return false;
-}
 
 #else /* CONFIG_SYSFS */
 #define net_class_groups	NULL
@@ -2132,8 +2121,14 @@ int netdev_register_kobject(struct net_d
 
 	*groups++ = &netstat_group;
 
-	if (wireless_group_needed(ndev))
+#if IS_ENABLED(CONFIG_WIRELESS_EXT) || IS_ENABLED(CONFIG_CFG80211)
+	if (ndev->ieee80211_ptr)
+		*groups++ = &wireless_group;
+#if IS_ENABLED(CONFIG_WIRELESS_EXT)
+	else if (ndev->wireless_handlers)
 		*groups++ = &wireless_group;
+#endif
+#endif
 #endif /* CONFIG_SYSFS */
 
 	error = device_add(dev);
--- a/include/linux/pci.h
+++ b/include/linux/pci.h
@@ -1082,6 +1082,8 @@ enum {
 #define PCI_IRQ_MSIX		(1 << 2) /* Allow MSI-X interrupts */
 #define PCI_IRQ_AFFINITY	(1 << 3) /* Auto-assign affinity */
 
+#define PCI_IRQ_LEGACY		PCI_IRQ_INTX /* Deprecated! Use PCI_IRQ_INTX */
+
 /* These external functions are only available when PCI support is enabled */
 #ifdef CONFIG_PCI
 
@@ -1647,7 +1649,8 @@ int pci_set_vga_state(struct pci_dev *pd
  */
 #define PCI_IRQ_VIRTUAL		(1 << 4)
 
-#define PCI_IRQ_ALL_TYPES	(PCI_IRQ_INTX | PCI_IRQ_MSI | PCI_IRQ_MSIX)
+#define PCI_IRQ_ALL_TYPES \
+	(PCI_IRQ_LEGACY | PCI_IRQ_MSI | PCI_IRQ_MSIX)
 
 #include <linux/dmapool.h>
 
@@ -1710,7 +1713,7 @@ pci_alloc_irq_vectors_affinity(struct pc
 			       unsigned int max_vecs, unsigned int flags,
 			       struct irq_affinity *aff_desc)
 {
-	if ((flags & PCI_IRQ_INTX) && min_vecs == 1 && dev->irq)
+	if ((flags & PCI_IRQ_LEGACY) && min_vecs == 1 && dev->irq)
 		return 1;
 	return -ENOSPC;
 }
