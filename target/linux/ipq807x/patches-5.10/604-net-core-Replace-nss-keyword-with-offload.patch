From 7c55539fa1e4ea6be400a35127ddc52d6dcd86d4 Mon Sep 17 00:00:00 2001
From: Himanshu Joshi <himajosh@codeaurora.org>
Date: Thu, 26 Nov 2020 16:21:06 +0530
Subject: [PATCH] net: core: Replace nss keyword with offload.

Kernel code should not checked in with NSS keyword.
This change fixes the naming issue for ifb module.

Signed-off-by: Himanshu Joshi <himajosh@codeaurora.org>
Change-Id: Iddb97d6ba0a443b830d1ac23728434a417bc8a92
---
 include/linux/skbuff.h    |  4 ++--
 include/net/sch_generic.h | 14 +++++++-------
 2 files changed, 9 insertions(+), 9 deletions(-)

--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -646,7 +646,7 @@ typedef unsigned char *sk_buff_data_t;
  *	@offload_fwd_mark: Packet was L2-forwarded in hardware
  *	@offload_l3_fwd_mark: Packet was L3-forwarded in hardware
  *	@tc_skip_classify: do not classify packet. set by IFB device
- *	@tc_skip_classify_nss: do not classify packet. set by NSS IFB device
+ *	@tc_skip_classify_offload: do not classify packet set by offload IFB device
  *	@tc_at_ingress: used within tc_classify to distinguish in/egress
  *	@redirected: packet was redirected by packet classifier
  *	@from_ingress: packet was redirected from the ingress path
@@ -851,7 +851,7 @@ struct sk_buff {
 #ifdef CONFIG_NET_CLS_ACT
 	__u8			tc_skip_classify:1;
 	__u8			tc_at_ingress:1;
-	__u8			tc_skip_classify_nss:1;
+	__u8			tc_skip_classify_offload:1;
 #endif
 #ifdef CONFIG_NET_REDIRECT
 	__u8			redirected:1;
--- a/include/net/sch_generic.h
+++ b/include/net/sch_generic.h
@@ -753,31 +753,31 @@ static inline bool skb_skip_tc_classify(
 /*
  * Set skb classify bit field.
  */
-static inline void skb_set_tc_classify_nss(struct sk_buff *skb)
+static inline void skb_set_tc_classify_offload(struct sk_buff *skb)
 {
 #ifdef CONFIG_NET_CLS_ACT
-	skb->tc_skip_classify_nss = 1;
+	skb->tc_skip_classify_offload = 1;
 #endif
 }
 
 /*
  * Clear skb classify bit field.
  */
-static inline void skb_clear_tc_classify_nss(struct sk_buff *skb)
+static inline void skb_clear_tc_classify_offload(struct sk_buff *skb)
 {
 #ifdef CONFIG_NET_CLS_ACT
-	skb->tc_skip_classify_nss = 0;
+	skb->tc_skip_classify_offload = 0;
 #endif
 }
 
 /*
  * Skip skb processing if sent from ifb dev.
  */
-static inline bool skb_skip_tc_classify_nss(struct sk_buff *skb)
+static inline bool skb_skip_tc_classify_offload(struct sk_buff *skb)
 {
 #ifdef CONFIG_NET_CLS_ACT
-	if (skb->tc_skip_classify_nss) {
-		skb_clear_tc_classify_nss(skb);
+	if (skb->tc_skip_classify_offload) {
+		skb_clear_tc_classify_offload(skb);
 		return true;
 	}
 #endif
