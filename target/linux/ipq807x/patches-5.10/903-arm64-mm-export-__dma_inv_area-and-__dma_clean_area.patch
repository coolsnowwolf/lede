From da0c8f67d9aca417a441af4fb90acf65eef94585 Mon Sep 17 00:00:00 2001
From: Robert Marko <robimarko@gmail.com>
Date: Thu, 13 May 2021 23:44:07 +0200
Subject: [PATCH] arm64: mm: export __dma_inv_area and __dma_clean_area

Qualcomm NSS drivers use these extensively.

Signed-off-by: Robert Marko <robimarko@gmail.com>
---
 arch/arm64/include/asm/cacheflush.h | 4 ++--
 arch/arm64/mm/cache.S               | 4 ++--
 arch/arm64/mm/flush.c               | 2 ++
 3 files changed, 6 insertions(+), 4 deletions(-)

--- a/arch/arm64/include/asm/cacheflush.h
+++ b/arch/arm64/include/asm/cacheflush.h
@@ -102,8 +102,8 @@ static inline void flush_icache_range(un
 extern void __dma_map_area(const void *, size_t, int);
 extern void __dma_unmap_area(const void *, size_t, int);
 extern void __dma_flush_area(const void *, size_t);
-extern void __dma_inv_area(const void *start, size_t size);
-extern void __dma_clean_area(const void *start, size_t size);
+extern void __dma_inv_area(const void *, size_t);
+extern void __dma_clean_area(const void *, size_t);
 
 #define dmac_flush_range(start, end) \
 	__dma_flush_area(start, (void *)(end) - (void *)(start))
--- a/arch/arm64/mm/cache.S
+++ b/arch/arm64/mm/cache.S
@@ -138,7 +138,7 @@ SYM_FUNC_END(__clean_dcache_area_pou)
  *	- kaddr   - kernel address
  *	- size    - size in question
  */
-SYM_FUNC_START_LOCAL(__dma_inv_area)
+SYM_FUNC_START(__dma_inv_area)
 SYM_FUNC_START_PI(__inval_dcache_area)
 	/* FALLTHROUGH */
 
@@ -177,7 +177,7 @@ SYM_FUNC_END(__dma_inv_area)
  *	- kaddr   - kernel address
  *	- size    - size in question
  */
-SYM_FUNC_START_LOCAL(__dma_clean_area)
+SYM_FUNC_START(__dma_clean_area)
 SYM_FUNC_START_PI(__clean_dcache_area_poc)
 	/* FALLTHROUGH */
 
--- a/arch/arm64/mm/flush.c
+++ b/arch/arm64/mm/flush.c
@@ -78,6 +78,8 @@ EXPORT_SYMBOL(flush_dcache_page);
  * Additional functions defined in assembly.
  */
 EXPORT_SYMBOL(__flush_icache_range);
+EXPORT_SYMBOL(__dma_inv_area);
+EXPORT_SYMBOL(__dma_clean_area);
 
 #ifdef CONFIG_ARCH_HAS_PMEM_API
 void arch_wb_cache_pmem(void *addr, size_t size)
