From c603c7a1e2d5cc432d8e1250baff8130755a6f43 Mon Sep 17 00:00:00 2001
From: Praveenkumar I <ipkumar@codeaurora.org>
Date: Mon, 13 Jul 2020 18:13:48 +0530
Subject: [PATCH 6/6] ipq807x: spmi regulator: Add separate voltage range for
 LDO

When LDO voltage range added in SMPS voltage range structure,
selector value used during set voltage is wrongly calculated.
Because the SMPS voltage range is also taken into account for LDO.

So, a separate voltage range structure is introduced for LDO.

Signed-off-by: Praveenkumar I <ipkumar@codeaurora.org>
Change-Id: I883518ae0686762a3774750b1dd480c4fe7298f3
---
 drivers/regulator/qcom_spmi-regulator.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

--- a/drivers/regulator/qcom_spmi-regulator.c
+++ b/drivers/regulator/qcom_spmi-regulator.c
@@ -493,7 +493,10 @@ static struct spmi_voltage_range smps_ra
 
 static struct spmi_voltage_range smps_vmpwm_ranges[] = {
 	SPMI_VOLTAGE_RANGE(0,  664000,  664000, 1104000, 1104000, 8000),
-	SPMI_VOLTAGE_RANGE(1,  1104000, 1104000, 3300000, 3300000, 8000),
+};
+
+static struct spmi_voltage_range ldo_vmpwm_ranges[] = {
+	SPMI_VOLTAGE_RANGE(0,  1104000, 1104000, 3300000, 3300000, 8000),
 };
 
 static struct spmi_voltage_range ftsmps_ranges[] = {
@@ -562,6 +565,7 @@ static DEFINE_SPMI_SET_POINTS(nldo3);
 static DEFINE_SPMI_SET_POINTS(ln_ldo);
 static DEFINE_SPMI_SET_POINTS(smps);
 static DEFINE_SPMI_SET_POINTS(smps_vmpwm);
+static DEFINE_SPMI_SET_POINTS(ldo_vmpwm);
 static DEFINE_SPMI_SET_POINTS(ftsmps);
 static DEFINE_SPMI_SET_POINTS(ftsmps2p5);
 static DEFINE_SPMI_SET_POINTS(ftsmps426);
@@ -1537,7 +1541,7 @@ static const struct regulator_ops spmi_h
 
 static const struct spmi_regulator_mapping supported_regulators[] = {
 	/*           type subtype dig_min dig_max ltype ops setpoints hpm_min */
-	SPMI_VREG(LDO,  HT_P150, 0, INF, LDO, smps_vmpwm, smps_vmpwm, 0),
+	SPMI_VREG(LDO,  HT_P150, 0, INF, LDO, smps_vmpwm, ldo_vmpwm, 0),
 	SPMI_VREG(BUCK,  VMPWM_CTL, 0, INF, SMPS, smps_vmpwm, smps_vmpwm, 0),
 	SPMI_VREG(BUCK,  GP_CTL,   0, INF, SMPS,   smps,   smps,   100000),
 	SPMI_VREG(BUCK,  HFS430,   0, INF, HFS430, hfs430, hfs430,  10000),
