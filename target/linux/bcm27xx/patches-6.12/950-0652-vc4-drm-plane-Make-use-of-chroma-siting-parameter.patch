From f814a2de7898a6bcc55733b4a39c724f90d20a0e Mon Sep 17 00:00:00 2001
From: Dom Cobley <popcornmix@gmail.com>
Date: Thu, 27 Jan 2022 15:32:04 +0000
Subject: [PATCH] vc4/drm:plane: Make use of chroma siting parameter

Signed-off-by: Dom Cobley <popcornmix@gmail.com>
---
 drivers/gpu/drm/vc4/vc4_plane.c | 13 +++++++++----
 1 file changed, 9 insertions(+), 4 deletions(-)

--- a/drivers/gpu/drm/vc4/vc4_plane.c
+++ b/drivers/gpu/drm/vc4/vc4_plane.c
@@ -594,7 +594,7 @@ static void vc4_write_tpz(struct vc4_pla
 #define PHASE_BITS 6
 
 static void vc4_write_ppf(struct vc4_plane_state *vc4_state, u32 src, u32 dst,
-			  u32 xy, int channel)
+			  u32 xy, int channel, int chroma_offset)
 {
 	struct vc4_dev *vc4 = to_vc4_dev(vc4_state->base.plane->dev);
 	u32 scale = src / dst;
@@ -605,7 +605,7 @@ static void vc4_write_ppf(struct vc4_pla
 
 	/*
 	 * Start the phase at 1/2 pixel from the 1st pixel at src_x.
-	 * 1/4 pixel for YUV.
+	 * 1/4 pixel for YUV, plus the offset for chroma siting.
 	 */
 	if (channel) {
 		/*
@@ -613,6 +613,7 @@ static void vc4_write_ppf(struct vc4_pla
 		 * display list's x value
 		 */
 		offset = (xy & 0x1ffff) >> (16 - PHASE_BITS) >> 1;
+		offset -= chroma_offset >> (17 - PHASE_BITS);
 		offset += -(1 << PHASE_BITS >> 2);
 	} else {
 		/*
@@ -839,13 +840,15 @@ static void vc4_write_scaling_parameters
 	/* Ch0 H-PPF Word 0: Scaling Parameters */
 	if (vc4_state->x_scaling[channel] == VC4_SCALING_PPF) {
 		vc4_write_ppf(vc4_state, vc4_state->src_w[channel],
-			      vc4_state->crtc_w, vc4_state->src_x, channel);
+			      vc4_state->crtc_w, vc4_state->src_x, channel,
+			      state->chroma_siting_h);
 	}
 
 	/* Ch0 V-PPF Words 0-1: Scaling Parameters, Context */
 	if (vc4_state->y_scaling[channel] == VC4_SCALING_PPF) {
 		vc4_write_ppf(vc4_state, vc4_state->src_h[channel],
-			      vc4_state->crtc_h, vc4_state->src_y, channel);
+			      vc4_state->crtc_h, vc4_state->src_y, channel,
+			      state->chroma_siting_v);
 		vc4_dlist_write(vc4_state, 0xc0c0c0c0);
 	}
 
@@ -2561,6 +2564,8 @@ struct drm_plane *vc4_plane_init(struct
 					  DRM_COLOR_YCBCR_BT709,
 					  DRM_COLOR_YCBCR_LIMITED_RANGE);
 
+	drm_plane_create_chroma_siting_properties(plane, 0, 0);
+
 	if (type == DRM_PLANE_TYPE_PRIMARY)
 		drm_plane_create_zpos_immutable_property(plane, 0);
 
