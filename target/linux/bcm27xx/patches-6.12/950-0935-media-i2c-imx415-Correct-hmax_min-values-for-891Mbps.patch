From 99734e5206c0446cff6b3d684449d0df5c2eb8d3 Mon Sep 17 00:00:00 2001
From: Dave Stevenson <dave.stevenson@raspberrypi.com>
Date: Mon, 31 Mar 2025 15:27:47 +0100
Subject: [PATCH] media: i2c : imx415: Correct hmax_min values for 891Mbps/lane

I obviously backported V1 of the patchset sent to mainline, as
code review there picked up these incorrect hmax_min values.
https://lore.kernel.org/all/AS4PR08MB773533B9D04BE15F51548FEBF7182@AS4PR08MB7735.eurprd08.prod.outlook.com/

The upstream patches also fixed a return without pm_runtime_put
and the fall-through from V4L2_CID_VBLANK to V4L2_CID_EXPOSURE not
updating ctrl, so the wrong exposure would get set.

Backport these fixes from mainline.

Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.com>
---
 drivers/media/i2c/imx415.c | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

--- a/drivers/media/i2c/imx415.c
+++ b/drivers/media/i2c/imx415.c
@@ -522,7 +522,7 @@ static const struct imx415_mode supporte
 	},
 	{
 		.lane_rate = 891000000,
-		.hmax_min = { 1100, 550 },
+		.hmax_min = { 2200, 1100 },
 		.reg_list = {
 			.num_of_regs = ARRAY_SIZE(imx415_linkrate_891mbps),
 			.regs = imx415_linkrate_891mbps,
@@ -725,6 +725,7 @@ static int imx415_s_ctrl(struct v4l2_ctr
 		 * Deliberately fall through as exposure is set based on VMAX
 		 * which has just changed.
 		 */
+		ctrl = sensor->exposure;
 		fallthrough;
 	case V4L2_CID_EXPOSURE:
 		/* clamp the exposure value to VMAX. */
@@ -752,10 +753,11 @@ static int imx415_s_ctrl(struct v4l2_ctr
 		break;
 
 	case V4L2_CID_HBLANK:
-		return cci_write(sensor->regmap, IMX415_HMAX,
-				 (format->width + ctrl->val) /
+		ret = cci_write(sensor->regmap, IMX415_HMAX,
+				(format->width + ctrl->val) /
 						IMX415_HMAX_MULTIPLIER,
 				 NULL);
+		break;
 
 	default:
 		ret = -EINVAL;
