From bfa7cf42e610d820b935b4805aa80484d591cb1f Mon Sep 17 00:00:00 2001
From: "SkyLake.Huang" <skylake.huang@mediatek.com>
Date: Thu, 23 Jun 2022 18:29:51 +0800
Subject: [PATCH 1/6] drivers: spi-mt65xx: Move chip_config to driver's private
 data

Signed-off-by: SkyLake.Huang <skylake.huang@mediatek.com>
---
 drivers/spi/spi-mt65xx.c                 | 28 ++++++++++--------------
 include/linux/platform_data/spi-mt65xx.h | 17 --------------
 2 files changed, 11 insertions(+), 34 deletions(-)
 delete mode 100644 include/linux/platform_data/spi-mt65xx.h

--- a/drivers/spi/spi-mt65xx.c
+++ b/drivers/spi/spi-mt65xx.c
@@ -15,7 +15,6 @@
 #include <linux/gpio/consumer.h>
 #include <linux/pinctrl/consumer.h>
 #include <linux/platform_device.h>
-#include <linux/platform_data/spi-mt65xx.h>
 #include <linux/pm_runtime.h>
 #include <linux/spi/spi.h>
 #include <linux/spi/spi-mem.h>
@@ -172,6 +171,8 @@ struct mtk_spi {
 	struct device *dev;
 	dma_addr_t tx_dma;
 	dma_addr_t rx_dma;
+	u32 sample_sel;
+	u32 get_tick_dly;
 };
 
 static const struct mtk_spi_compatible mtk_common_compat;
@@ -217,15 +218,6 @@ static const struct mtk_spi_compatible m
 	.no_need_unprepare = true,
 };
 
-/*
- * A piece of default chip info unless the platform
- * supplies it.
- */
-static const struct mtk_chip_config mtk_default_chip_info = {
-	.sample_sel = 0,
-	.tick_delay = 0,
-};
-
 static const struct of_device_id mtk_spi_of_match[] = {
 	{ .compatible = "mediatek,spi-ipm",
 		.data = (void *)&mtk_ipm_compat,
@@ -353,7 +345,6 @@ static int mtk_spi_hw_init(struct spi_co
 {
 	u16 cpha, cpol;
 	u32 reg_val;
-	struct mtk_chip_config *chip_config = spi->controller_data;
 	struct mtk_spi *mdata = spi_controller_get_devdata(host);
 
 	cpha = spi->mode & SPI_CPHA ? 1 : 0;
@@ -403,7 +394,7 @@ static int mtk_spi_hw_init(struct spi_co
 		else
 			reg_val &= ~SPI_CMD_CS_POL;
 
-		if (chip_config->sample_sel)
+		if (mdata->sample_sel)
 			reg_val |= SPI_CMD_SAMPLE_SEL;
 		else
 			reg_val &= ~SPI_CMD_SAMPLE_SEL;
@@ -430,20 +421,20 @@ static int mtk_spi_hw_init(struct spi_co
 		if (mdata->dev_comp->ipm_design) {
 			reg_val = readl(mdata->base + SPI_CMD_REG);
 			reg_val &= ~SPI_CMD_IPM_GET_TICKDLY_MASK;
-			reg_val |= ((chip_config->tick_delay & 0x7)
+			reg_val |= ((mdata->get_tick_dly & 0x7)
 				    << SPI_CMD_IPM_GET_TICKDLY_OFFSET);
 			writel(reg_val, mdata->base + SPI_CMD_REG);
 		} else {
 			reg_val = readl(mdata->base + SPI_CFG1_REG);
 			reg_val &= ~SPI_CFG1_GET_TICK_DLY_MASK;
-			reg_val |= ((chip_config->tick_delay & 0x7)
+			reg_val |= ((mdata->get_tick_dly & 0x7)
 				    << SPI_CFG1_GET_TICK_DLY_OFFSET);
 			writel(reg_val, mdata->base + SPI_CFG1_REG);
 		}
 	} else {
 		reg_val = readl(mdata->base + SPI_CFG1_REG);
 		reg_val &= ~SPI_CFG1_GET_TICK_DLY_MASK_V1;
-		reg_val |= ((chip_config->tick_delay & 0x3)
+		reg_val |= ((mdata->get_tick_dly & 0x3)
 			    << SPI_CFG1_GET_TICK_DLY_OFFSET_V1);
 		writel(reg_val, mdata->base + SPI_CFG1_REG);
 	}
@@ -733,9 +724,6 @@ static int mtk_spi_setup(struct spi_devi
 {
 	struct mtk_spi *mdata = spi_controller_get_devdata(spi->controller);
 
-	if (!spi->controller_data)
-		spi->controller_data = (void *)&mtk_default_chip_info;
-
 	if (mdata->dev_comp->need_pad_sel && spi_get_csgpiod(spi, 0))
 		/* CS de-asserted, gpiolib will handle inversion */
 		gpiod_direction_output(spi_get_csgpiod(spi, 0), 0);
@@ -1146,6 +1134,11 @@ static int mtk_spi_probe(struct platform
 	host->use_gpio_descriptors = true;
 
 	mdata = spi_controller_get_devdata(host);
+
+	/* Set device configs to default first. Calibrate it later. */
+	mdata->sample_sel = 0;
+	mdata->get_tick_dly = 2;
+
 	mdata->dev_comp = device_get_match_data(dev);
 
 	if (mdata->dev_comp->enhance_timing)
--- a/include/linux/platform_data/spi-mt65xx.h
+++ /dev/null
@@ -1,17 +0,0 @@
-/* SPDX-License-Identifier: GPL-2.0-only */
-/*
- *  MTK SPI bus driver definitions
- *
- * Copyright (c) 2015 MediaTek Inc.
- * Author: Leilk Liu <leilk.liu@mediatek.com>
- */
-
-#ifndef ____LINUX_PLATFORM_DATA_SPI_MTK_H
-#define ____LINUX_PLATFORM_DATA_SPI_MTK_H
-
-/* Board specific platform_data */
-struct mtk_chip_config {
-	u32 sample_sel;
-	u32 tick_delay;
-};
-#endif
