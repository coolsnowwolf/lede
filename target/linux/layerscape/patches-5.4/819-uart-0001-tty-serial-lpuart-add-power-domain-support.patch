From e8730a6bd02cf4f6a3e2d11585d91c0417ed92e5 Mon Sep 17 00:00:00 2001
From: Fugang Duan <fugang.duan@nxp.com>
Date: Wed, 10 Jul 2019 14:20:45 +0800
Subject: [PATCH] tty: serial: lpuart: add power domain support

lpuart dma mode depends on dma channel's power domain like:
power-domains = <&pd IMX_SC_R_UART_1>,
                <&pd IMX_SC_R_DMA_2_CH10>,
                <&pd IMX_SC_R_DMA_2_CH11>;
power-domain-names = "uart", "rxdma", "txdma";

So define the multiple power domain for lpuart.

Signed-off-by: Fugang Duan <fugang.duan@nxp.com>
---
 drivers/tty/serial/fsl_lpuart.c | 54 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 54 insertions(+)

--- a/drivers/tty/serial/fsl_lpuart.c
+++ b/drivers/tty/serial/fsl_lpuart.c
@@ -20,6 +20,8 @@
 #include <linux/of.h>
 #include <linux/of_device.h>
 #include <linux/of_dma.h>
+#include <linux/pm_domain.h>
+#include <linux/pm_runtime.h>
 #include <linux/serial_core.h>
 #include <linux/slab.h>
 #include <linux/tty_flip.h>
@@ -2394,6 +2396,54 @@ static struct uart_driver lpuart_reg = {
 	.cons		= LPUART_CONSOLE,
 };
 
+static int lpuart_attach_pd(struct device *dev)
+{
+	struct device *pd_uart;
+	struct device *pd_txdma, *pd_rxdma;
+	struct device_link *link;
+
+	if (dev->pm_domain)
+		return 0;
+
+	pd_uart = dev_pm_domain_attach_by_name(dev, "uart");
+	if (IS_ERR(pd_uart))
+		return PTR_ERR(pd_uart);
+	link = device_link_add(dev, pd_uart, DL_FLAG_STATELESS |
+					     DL_FLAG_PM_RUNTIME |
+					     DL_FLAG_RPM_ACTIVE);
+	if (IS_ERR(link)) {
+		dev_err(dev, "Failed to add device_link to uart pd: %ld\n",
+			PTR_ERR(link));
+		return PTR_ERR(link);
+	}
+
+	pd_txdma = dev_pm_domain_attach_by_name(dev, "txdma");
+	if (IS_ERR(pd_txdma))
+		return PTR_ERR(pd_txdma);
+	link = device_link_add(dev, pd_txdma, DL_FLAG_STATELESS |
+					     DL_FLAG_PM_RUNTIME |
+					     DL_FLAG_RPM_ACTIVE);
+	if (IS_ERR(link)) {
+		dev_err(dev, "Failed to add device_link to uart pd: %ld\n",
+			PTR_ERR(link));
+		return PTR_ERR(link);
+	}
+
+	pd_rxdma = dev_pm_domain_attach_by_name(dev, "rxdma");
+	if (IS_ERR(pd_rxdma))
+		return PTR_ERR(pd_rxdma);
+	link = device_link_add(dev, pd_rxdma, DL_FLAG_STATELESS |
+					     DL_FLAG_PM_RUNTIME |
+					     DL_FLAG_RPM_ACTIVE);
+	if (IS_ERR(link)) {
+		dev_err(dev, "Failed to add device_link to uart pd: %ld\n",
+			PTR_ERR(link));
+		return PTR_ERR(link);
+	}
+
+	return 0;
+}
+
 static int lpuart_probe(struct platform_device *pdev)
 {
 	const struct of_device_id *of_id = of_match_device(lpuart_dt_ids,
@@ -2431,6 +2481,10 @@ static int lpuart_probe(struct platform_
 
 	sport->port.rs485_config = lpuart_config_rs485;
 
+	ret = lpuart_attach_pd(&pdev->dev);
+	if (ret)
+		return ret;
+
 	sport->ipg_clk = devm_clk_get(&pdev->dev, "ipg");
 	if (IS_ERR(sport->ipg_clk)) {
 		ret = PTR_ERR(sport->ipg_clk);
