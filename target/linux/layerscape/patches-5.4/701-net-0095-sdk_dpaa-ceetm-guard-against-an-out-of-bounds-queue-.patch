From cfda91fdd3396b97f2c08f0d8ed7749fbd87bb7b Mon Sep 17 00:00:00 2001
From: Camelia Groza <camelia.groza@nxp.com>
Date: Tue, 30 Oct 2018 17:34:31 +0200
Subject: [PATCH] sdk_dpaa: ceetm: guard against an out of bounds queue index

Make sure the queue mapping recorded in the skb is not larger than our
egress queue count.

Signed-off-by: Camelia Groza <camelia.groza@nxp.com>
---
 drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

--- a/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c
+++ b/drivers/net/ethernet/freescale/sdk_dpaa/dpaa_eth_ceetm.c
@@ -1982,7 +1982,7 @@ static struct ceetm_class *ceetm_classif
 
 int __hot ceetm_tx(struct sk_buff *skb, struct net_device *net_dev)
 {
-	const int queue_mapping = dpa_get_queue_mapping(skb);
+	int queue_mapping = dpa_get_queue_mapping(skb);
 	struct Qdisc *sch = net_dev->qdisc;
 	struct ceetm_class_stats *cstats;
 	struct ceetm_qdisc_stats *qstats;
@@ -2016,6 +2016,9 @@ int __hot ceetm_tx(struct sk_buff *skb,
 		goto drop;
 	}
 
+	if (unlikely(queue_mapping >= DPAA_ETH_TX_QUEUES))
+		queue_mapping = queue_mapping % DPAA_ETH_TX_QUEUES;
+
 	priv_dpa = netdev_priv(net_dev);
 	conf_fq = priv_dpa->conf_fqs[queue_mapping];
 
