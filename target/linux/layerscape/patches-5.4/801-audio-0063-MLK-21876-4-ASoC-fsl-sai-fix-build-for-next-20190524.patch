From 23212c6c5fcee8c1a317b5beb73c89374751de7b Mon Sep 17 00:00:00 2001
From: Dong Aisheng <aisheng.dong@nxp.com>
Date: Mon, 27 May 2019 17:00:54 +0800
Subject: [PATCH] MLK-21876-4 ASoC: fsl: sai: fix build for next-20190524
 upgrade
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

In file included from ../sound/soc/fsl/fsl_sai.c:15:0:
../sound/soc/fsl/fsl_sai.c: In function ‘fsl_sai_startup’:
../sound/soc/fsl/fsl_sai.c:957:51: error: ‘offset’ undeclared (first use in this function)
  regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx, offset),
                                                   ^
../include/linux/regmap.h:77:31: note: in definition of macro ‘regmap_update_bits’
  regmap_update_bits_base(map, reg, mask, val, NULL, false, false)
                               ^
../sound/soc/fsl/fsl_sai.h:84:37: note: in expansion of macro ‘FSL_SAI_TCR3’
 #define FSL_SAI_xCR3(tx, off) (tx ? FSL_SAI_TCR3(off) : FSL_SAI_RCR3(off))
                                     ^
../sound/soc/fsl/fsl_sai.c:957:34: note: in expansion of macro ‘FSL_SAI_xCR3’
  regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx, offset),
                                  ^
../sound/soc/fsl/fsl_sai.c:957:51: note: each undeclared identifier is reported only once for each function it appears in
  regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx, offset),
                                                   ^
../include/linux/regmap.h:77:31: note: in definition of macro ‘regmap_update_bits’
  regmap_update_bits_base(map, reg, mask, val, NULL, false, false)
                               ^
../sound/soc/fsl/fsl_sai.h:84:37: note: in expansion of macro ‘FSL_SAI_TCR3’
 #define FSL_SAI_xCR3(tx, off) (tx ? FSL_SAI_TCR3(off) : FSL_SAI_RCR3(off))
                                     ^
../sound/soc/fsl/fsl_sai.c:957:34: note: in expansion of macro ‘FSL_SAI_xCR3’
  regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx, offset),

Signed-off-by: Dong Aisheng <aisheng.dong@nxp.com>
---
 sound/soc/fsl/fsl_sai.c | 11 +----------
 1 file changed, 1 insertion(+), 10 deletions(-)

--- a/sound/soc/fsl/fsl_sai.c
+++ b/sound/soc/fsl/fsl_sai.c
@@ -954,10 +954,6 @@ static int fsl_sai_startup(struct snd_pc
 	else
 		sai->is_stream_opened[tx] = true;
 
-	regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx, offset),
-			   FSL_SAI_CR3_TRCE_MASK,
-			   FSL_SAI_CR3_TRCE(sai->dataline[tx]));
-
 	/* EDMA engine needs periods of size multiple of tx/rx maxburst */
 	if (sai->soc->constrain_period_size)
 		snd_pcm_hw_constraint_step(substream->runtime, 0,
@@ -977,13 +973,8 @@ static void fsl_sai_shutdown(struct snd_
 	struct fsl_sai *sai = snd_soc_dai_get_drvdata(cpu_dai);
 	bool tx = substream->stream == SNDRV_PCM_STREAM_PLAYBACK;
 
-	regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx), FSL_SAI_CR3_TRCE, 0);
-
-	if (sai->is_stream_opened[tx]) {
-		regmap_update_bits(sai->regmap, FSL_SAI_xCR3(tx, offset),
-				   FSL_SAI_CR3_TRCE_MASK, 0);
+	if (sai->is_stream_opened[tx])
 		sai->is_stream_opened[tx] = false;
-	}
 }
 
 static const struct snd_soc_dai_ops fsl_sai_pcm_dai_ops = {
