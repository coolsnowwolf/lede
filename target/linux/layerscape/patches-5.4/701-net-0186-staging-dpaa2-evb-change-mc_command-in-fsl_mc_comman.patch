From 92ee95e52191107f8c8adea810232920358ae0e0 Mon Sep 17 00:00:00 2001
From: Razvan Stefanescu <razvan.stefanescu@nxp.com>
Date: Thu, 12 Apr 2018 15:19:10 +0300
Subject: [PATCH] staging: dpaa2-evb: change mc_command in fsl_mc_command

Adapt to the upstream changes.

Signed-off-by: Razvan Stefanescu <razvan.stefanescu@nxp.com>
---
 drivers/staging/fsl-dpaa2/evb/dpdmux.c | 60 +++++++++++++++++-----------------
 1 file changed, 30 insertions(+), 30 deletions(-)

--- a/drivers/staging/fsl-dpaa2/evb/dpdmux.c
+++ b/drivers/staging/fsl-dpaa2/evb/dpdmux.c
@@ -55,7 +55,7 @@ int dpdmux_open(struct fsl_mc_io *mc_io,
 		int dpdmux_id,
 		u16 *token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_open *cmd_params;
 	int err;
 
@@ -92,7 +92,7 @@ int dpdmux_close(struct fsl_mc_io *mc_io
 		 u32 cmd_flags,
 		 u16 token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_CLOSE,
@@ -131,7 +131,7 @@ int dpdmux_create(struct fsl_mc_io *mc_i
 		  const struct dpdmux_cfg *cfg,
 		  u32 *obj_id)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_create *cmd_params;
 	int err;
 
@@ -180,7 +180,7 @@ int dpdmux_destroy(struct fsl_mc_io *mc_
 		   u32 cmd_flags,
 		   u32 object_id)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_destroy *cmd_params;
 
 	/* prepare command */
@@ -206,7 +206,7 @@ int dpdmux_enable(struct fsl_mc_io *mc_i
 		  u32 cmd_flags,
 		  u16 token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_ENABLE,
@@ -229,7 +229,7 @@ int dpdmux_disable(struct fsl_mc_io *mc_
 		   u32 cmd_flags,
 		   u16 token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_DISABLE,
@@ -254,7 +254,7 @@ int dpdmux_is_enabled(struct fsl_mc_io *
 		      u16 token,
 		      int *en)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_rsp_is_enabled *rsp_params;
 	int err;
 
@@ -287,7 +287,7 @@ int dpdmux_reset(struct fsl_mc_io *mc_io
 		 u32 cmd_flags,
 		 u16 token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_RESET,
@@ -319,7 +319,7 @@ int dpdmux_set_irq_enable(struct fsl_mc_
 			  u8 irq_index,
 			  u8 en)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_set_irq_enable *cmd_params;
 
 	/* prepare command */
@@ -350,7 +350,7 @@ int dpdmux_get_irq_enable(struct fsl_mc_
 			  u8 irq_index,
 			  u8 *en)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_get_irq_enable *cmd_params;
 	struct dpdmux_rsp_get_irq_enable *rsp_params;
 	int err;
@@ -396,7 +396,7 @@ int dpdmux_set_irq_mask(struct fsl_mc_io
 			u8 irq_index,
 			u32 mask)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_set_irq_mask *cmd_params;
 
 	/* prepare command */
@@ -430,7 +430,7 @@ int dpdmux_get_irq_mask(struct fsl_mc_io
 			u8 irq_index,
 			u32 *mask)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_get_irq_mask *cmd_params;
 	struct dpdmux_rsp_get_irq_mask *rsp_params;
 	int err;
@@ -472,7 +472,7 @@ int dpdmux_get_irq_status(struct fsl_mc_
 			  u8 irq_index,
 			  u32 *status)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_get_irq_status *cmd_params;
 	struct dpdmux_rsp_get_irq_status *rsp_params;
 	int err;
@@ -515,7 +515,7 @@ int dpdmux_clear_irq_status(struct fsl_m
 			    u8 irq_index,
 			    u32 status)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_clear_irq_status *cmd_params;
 
 	/* prepare command */
@@ -544,7 +544,7 @@ int dpdmux_get_attributes(struct fsl_mc_
 			  u16 token,
 			  struct dpdmux_attr *attr)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_rsp_get_attr *rsp_params;
 	int err;
 
@@ -585,7 +585,7 @@ int dpdmux_if_enable(struct fsl_mc_io *m
 		     u16 if_id)
 {
 	struct dpdmux_cmd_if *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_IF_ENABLE,
@@ -613,7 +613,7 @@ int dpdmux_if_disable(struct fsl_mc_io *
 		      u16 if_id)
 {
 	struct dpdmux_cmd_if *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_IF_DISABLE,
@@ -645,7 +645,7 @@ int dpdmux_set_max_frame_length(struct f
 				u16 token,
 				u16 max_frame_length)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_set_max_frame_length *cmd_params;
 
 	/* prepare command */
@@ -671,7 +671,7 @@ int dpdmux_ul_reset_counters(struct fsl_
 			     u32 cmd_flags,
 			     u16 token)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_UL_RESET_COUNTERS,
@@ -705,7 +705,7 @@ int dpdmux_if_set_accepted_frames(struct
 				  u16 if_id,
 				  const struct dpdmux_accepted_frames *cfg)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if_set_accepted_frames *cmd_params;
 
 	/* prepare command */
@@ -739,7 +739,7 @@ int dpdmux_if_get_attributes(struct fsl_
 			     u16 if_id,
 			     struct dpdmux_if_attr *attr)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if *cmd_params;
 	struct dpdmux_rsp_if_get_attr *rsp_params;
 	int err;
@@ -786,7 +786,7 @@ int dpdmux_if_remove_l2_rule(struct fsl_
 			     u16 if_id,
 			     const struct dpdmux_l2_rule *rule)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if_l2_rule *cmd_params;
 
 	/* prepare command */
@@ -826,7 +826,7 @@ int dpdmux_if_add_l2_rule(struct fsl_mc_
 			  u16 if_id,
 			  const struct dpdmux_l2_rule *rule)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if_l2_rule *cmd_params;
 
 	/* prepare command */
@@ -865,7 +865,7 @@ int dpdmux_if_get_counter(struct fsl_mc_
 			  enum dpdmux_counter_type counter_type,
 			  u64 *counter)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if_get_counter *cmd_params;
 	struct dpdmux_rsp_if_get_counter *rsp_params;
 	int err;
@@ -906,7 +906,7 @@ int dpdmux_if_set_link_cfg(struct fsl_mc
 			   u16 if_id,
 			   struct dpdmux_link_cfg *cfg)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if_set_link_cfg *cmd_params;
 
 	/* prepare command */
@@ -938,7 +938,7 @@ int dpdmux_if_get_link_state(struct fsl_
 			     u16 if_id,
 			     struct dpdmux_link_state *state)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_cmd_if_get_link_state *cmd_params;
 	struct dpdmux_rsp_if_get_link_state *rsp_params;
 	int err;
@@ -989,7 +989,7 @@ int dpdmux_set_custom_key(struct fsl_mc_
 			  u64 key_cfg_iova)
 {
 	struct dpdmux_set_custom_key *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_SET_CUSTOM_KEY,
@@ -1025,7 +1025,7 @@ int dpdmux_add_custom_cls_entry(struct f
 				struct dpdmux_cls_action *action)
 {
 	struct dpdmux_cmd_add_custom_cls_entry *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_ADD_CUSTOM_CLS_ENTRY,
@@ -1062,7 +1062,7 @@ int dpdmux_remove_custom_cls_entry(struc
 				   struct dpdmux_rule_cfg *rule)
 {
 	struct dpdmux_cmd_remove_custom_cls_entry *cmd_params;
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 
 	/* prepare command */
 	cmd.header = mc_encode_cmd_header(DPDMUX_CMDID_REMOVE_CUSTOM_CLS_ENTRY,
@@ -1091,7 +1091,7 @@ int dpdmux_get_api_version(struct fsl_mc
 			   u16 *major_ver,
 			   u16 *minor_ver)
 {
-	struct mc_command cmd = { 0 };
+	struct fsl_mc_command cmd = { 0 };
 	struct dpdmux_rsp_get_api_version *rsp_params;
 	int err;
 
